{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_keyhash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_usdEntryFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recentWinner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "randomNumber",
          "type": "uint256"
        }
      ],
      "name": "LotteryEnded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "RequestedRandomness",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "checkData",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_shouldRestart",
          "type": "bool"
        }
      ],
      "name": "endLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntranceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keyhash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lotteryCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lotteryDurationInSeconds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lottery_state",
      "outputs": [
        {
          "internalType": "enum ArtemLottery.LOTTERY_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recentWinner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shouldRestart",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdEntryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/aradchenko/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
    "1": "/home/aradchenko/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "2": "/home/aradchenko/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFConsumerBase.sol",
    "3": "/home/aradchenko/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFRequestIDBase.sol",
    "4": "/home/aradchenko/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "5": "/home/aradchenko/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
    "7": "contracts/ArtemLottery.sol"
  },
  "ast": {
    "absolutePath": "contracts/ArtemLottery.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        694
      ],
      "ArtemLottery": [
        423
      ],
      "Context": [
        735
      ],
      "KeeperCompatibleInterface": [
        713
      ],
      "LinkTokenInterface": [
        880
      ],
      "Ownable": [
        527
      ],
      "VRFConsumerBase": [
        648
      ],
      "VRFRequestIDBase": [
        785
      ]
    },
    "id": 424,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "/home/aradchenko/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 424,
        "sourceUnit": 649,
        "src": "57:59:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aradchenko/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 424,
        "sourceUnit": 528,
        "src": "117:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aradchenko/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 424,
        "sourceUnit": 695,
        "src": "170:76:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aradchenko/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 424,
        "sourceUnit": 714,
        "src": "247:80:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 648,
              "src": "354:15:7"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "354:15:7"
          },
          {
            "baseName": {
              "id": 8,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 527,
              "src": "371:7:7"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "371:7:7"
          },
          {
            "baseName": {
              "id": 10,
              "name": "KeeperCompatibleInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 713,
              "src": "380:25:7"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "380:25:7"
          }
        ],
        "canonicalName": "ArtemLottery",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 423,
        "linearizedBaseContracts": [
          423,
          713,
          527,
          735,
          648,
          785
        ],
        "name": "ArtemLottery",
        "nameLocation": "338:12:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f71d96cb",
            "id": 14,
            "mutability": "mutable",
            "name": "players",
            "nameLocation": "437:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 423,
            "src": "412:32:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "412:15:7",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 13,
              "nodeType": "ArrayTypeName",
              "src": "412:17:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f8c70cf",
            "id": 16,
            "mutability": "mutable",
            "name": "recentWinner",
            "nameLocation": "473:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 423,
            "src": "450:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 15,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "450:15:7",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "36013189",
            "id": 18,
            "mutability": "mutable",
            "name": "randomness",
            "nameLocation": "506:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 423,
            "src": "491:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "491:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "88ab139a",
            "id": 20,
            "mutability": "mutable",
            "name": "usdEntryFee",
            "nameLocation": "537:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 423,
            "src": "522:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "522:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "ethUsdPriceFeed",
            "nameLocation": "585:15:7",
            "nodeType": "VariableDeclaration",
            "scope": 423,
            "src": "554:46:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$694",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 22,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 694,
                "src": "554:21:7"
              },
              "referencedDeclaration": 694,
              "src": "554:21:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$694",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "ArtemLottery.LOTTERY_STATE",
            "id": 27,
            "members": [
              {
                "id": 24,
                "name": "OPEN",
                "nameLocation": "635:4:7",
                "nodeType": "EnumValue",
                "src": "635:4:7"
              },
              {
                "id": 25,
                "name": "CLOSED",
                "nameLocation": "649:6:7",
                "nodeType": "EnumValue",
                "src": "649:6:7"
              },
              {
                "id": 26,
                "name": "CALCULATING_WINNER",
                "nameLocation": "665:18:7",
                "nodeType": "EnumValue",
                "src": "665:18:7"
              }
            ],
            "name": "LOTTERY_STATE",
            "nameLocation": "611:13:7",
            "nodeType": "EnumDefinition",
            "src": "606:83:7"
          },
          {
            "constant": false,
            "functionSelector": "81447999",
            "id": 30,
            "mutability": "mutable",
            "name": "lottery_state",
            "nameLocation": "715:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 423,
            "src": "694:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
              "typeString": "enum ArtemLottery.LOTTERY_STATE"
            },
            "typeName": {
              "id": 29,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28,
                "name": "LOTTERY_STATE",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27,
                "src": "694:13:7"
              },
              "referencedDeclaration": 27,
              "src": "694:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                "typeString": "enum ArtemLottery.LOTTERY_STATE"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ddca3f43",
            "id": 32,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "749:3:7",
            "nodeType": "VariableDeclaration",
            "scope": 423,
            "src": "734:18:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "734:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "69ebe78e",
            "id": 34,
            "mutability": "mutable",
            "name": "keyhash",
            "nameLocation": "773:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 423,
            "src": "758:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 33,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "758:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 38,
            "name": "RequestedRandomness",
            "nameLocation": "792:19:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "820:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "812:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "811:19:7"
            },
            "src": "786:45:7"
          },
          {
            "anonymous": false,
            "id": 46,
            "name": "LotteryEnded",
            "nameLocation": "843:12:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "881:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "865:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recentWinner",
                  "nameLocation": "908:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "900:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "randomNumber",
                  "nameLocation": "938:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "930:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "855:101:7"
            },
            "src": "837:120:7"
          },
          {
            "constant": false,
            "documentation": {
              "id": 47,
              "nodeType": "StructuredDocumentation",
              "src": "990:89:7",
              "text": " Use an interval in seconds and a timestamp to slow execution of Upkeep"
            },
            "functionSelector": "621e3217",
            "id": 49,
            "mutability": "immutable",
            "name": "lotteryDurationInSeconds",
            "nameLocation": "1109:24:7",
            "nodeType": "VariableDeclaration",
            "scope": 423,
            "src": "1084:49:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1084:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3f3b3b27",
            "id": 51,
            "mutability": "mutable",
            "name": "lastTimeStamp",
            "nameLocation": "1154:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 423,
            "src": "1139:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1139:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4a4a6b4f",
            "id": 53,
            "mutability": "mutable",
            "name": "lotteryCounter",
            "nameLocation": "1188:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 423,
            "src": "1173:29:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 52,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1173:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fe2f96b0",
            "id": 55,
            "mutability": "mutable",
            "name": "shouldRestart",
            "nameLocation": "1220:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 423,
            "src": "1208:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 54,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1208:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "1500:350:7",
              "statements": [
                {
                  "expression": {
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76,
                      "name": "usdEntryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1510:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 77,
                      "name": "_usdEntryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1524:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1510:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1510:26:7"
                },
                {
                  "expression": {
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80,
                      "name": "ethUsdPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1546:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$694",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 82,
                          "name": "_priceFeedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "1586:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 81,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "1564:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$694_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1564:40:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$694",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1546:58:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$694",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1546:58:7"
                },
                {
                  "expression": {
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86,
                      "name": "lottery_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1614:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                        "typeString": "enum ArtemLottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 87,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "1630:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$27_$",
                          "typeString": "type(enum ArtemLottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "1630:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                        "typeString": "enum ArtemLottery.LOTTERY_STATE"
                      }
                    },
                    "src": "1614:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                      "typeString": "enum ArtemLottery.LOTTERY_STATE"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1614:36:7"
                },
                {
                  "expression": {
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1660:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 92,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "1666:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1660:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1660:10:7"
                },
                {
                  "expression": {
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 95,
                      "name": "keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1680:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 96,
                      "name": "_keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "1690:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1680:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1680:18:7"
                },
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99,
                      "name": "lotteryDurationInSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "1708:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 100,
                      "name": "duration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "1735:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1708:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1708:35:7"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "1753:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 104,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1769:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1769:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1753:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1753:31:7"
                },
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 108,
                      "name": "lotteryCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "1794:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1811:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1794:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:18:7"
                },
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 112,
                      "name": "shouldRestart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1822:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1838:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1822:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1822:21:7"
                }
              ]
            },
            "id": 117,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 72,
                    "name": "_vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59,
                    "src": "1476:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 73,
                    "name": "_link",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61,
                    "src": "1493:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 74,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 71,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 648,
                  "src": "1460:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1460:39:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "_priceFeedAddress",
                  "nameLocation": "1269:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1261:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "1304:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1296:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1296:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "_link",
                  "nameLocation": "1337:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1329:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "1360:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1352:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1352:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_keyhash",
                  "nameLocation": "1382:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1374:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_usdEntryFee",
                  "nameLocation": "1408:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1400:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1400:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "1438:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1430:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1251:201:7"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1500:0:7"
            },
            "scope": 423,
            "src": "1240:610:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "1888:194:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                          "typeString": "enum ArtemLottery.LOTTERY_STATE"
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 121,
                          "name": "lottery_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "1929:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                            "typeString": "enum ArtemLottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 122,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1946:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$27_$",
                              "typeString": "type(enum ArtemLottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24,
                          "src": "1946:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                            "typeString": "enum ArtemLottery.LOTTERY_STATE"
                          }
                        },
                        "src": "1929:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1921:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1921:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1921:44:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 128,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1983:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1983:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 130,
                            "name": "getEntranceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 183,
                            "src": "1996:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1996:16:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1983:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682045544821",
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2014:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de",
                          "typeString": "literal_string \"Not enough ETH!\""
                        },
                        "value": "Not enough ETH!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de",
                          "typeString": "literal_string \"Not enough ETH!\""
                        }
                      ],
                      "id": 127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1975:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1975:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1975:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 141,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2063:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2063:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2055:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 139,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2055:8:7",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2055:19:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 136,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2042:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2042:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                        "typeString": "function (address payable[] storage pointer,address payable)"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2042:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2042:33:7"
                }
              ]
            },
            "functionSelector": "e97dcb62",
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enter",
            "nameLocation": "1865:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1870:2:7"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1888:0:7"
            },
            "scope": 423,
            "src": "1856:226:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "2144:324:7",
              "statements": [
                {
                  "assignments": [
                    null,
                    153,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 153,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "2164:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 182,
                      "src": "2157:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 152,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2157:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 157,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 154,
                        "name": "ethUsdPriceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "2179:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$694",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 693,
                      "src": "2179:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2179:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2154:58:7"
                },
                {
                  "assignments": [
                    159
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 159,
                      "mutability": "mutable",
                      "name": "adjustedPrice",
                      "nameLocation": "2230:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 182,
                      "src": "2222:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 158,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2222:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 168,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 162,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "2254:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2246:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2246:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2246:14:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2263:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2267:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "2263:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      }
                    },
                    "src": "2246:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2222:47:7"
                },
                {
                  "assignments": [
                    170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 170,
                      "mutability": "mutable",
                      "name": "costToEnter",
                      "nameLocation": "2381:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 182,
                      "src": "2373:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 169,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2373:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 179,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 171,
                            "name": "usdEntryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2396:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2410:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2414:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "2410:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "2396:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 176,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2395:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 177,
                      "name": "adjustedPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "2420:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2395:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2373:60:7"
                },
                {
                  "expression": {
                    "id": 180,
                    "name": "costToEnter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 170,
                    "src": "2450:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 151,
                  "id": 181,
                  "nodeType": "Return",
                  "src": "2443:18:7"
                }
              ]
            },
            "functionSelector": "09bc33a7",
            "id": 183,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntranceFee",
            "nameLocation": "2097:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2111:2:7"
            },
            "returnParameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "2135:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2135:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2134:9:7"
            },
            "scope": 423,
            "src": "2088:380:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "2577:237:7",
              "statements": [
                {
                  "assignments": [
                    190,
                    192,
                    194,
                    196,
                    198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 190,
                      "mutability": "mutable",
                      "name": "roundID",
                      "nameLocation": "2608:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "2601:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 189,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "2601:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 192,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "2636:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "2629:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 191,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2629:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 194,
                      "mutability": "mutable",
                      "name": "startedAt",
                      "nameLocation": "2663:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "2655:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 193,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2655:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 196,
                      "mutability": "mutable",
                      "name": "timeStamp",
                      "nameLocation": "2694:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "2686:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 195,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2686:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 198,
                      "mutability": "mutable",
                      "name": "answeredInRound",
                      "nameLocation": "2724:15:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "2717:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 197,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "2717:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 202,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 199,
                        "name": "ethUsdPriceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "2752:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$694",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 693,
                      "src": "2752:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2752:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2587:198:7"
                },
                {
                  "expression": {
                    "id": 203,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 192,
                    "src": "2802:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 188,
                  "id": 204,
                  "nodeType": "Return",
                  "src": "2795:12:7"
                }
              ]
            },
            "documentation": {
              "id": 184,
              "nodeType": "StructuredDocumentation",
              "src": "2474:43:7",
              "text": " Returns the latest price"
            },
            "functionSelector": "8e15f473",
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPrice",
            "nameLocation": "2531:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2545:2:7"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "2569:6:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2569:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2568:8:7"
            },
            "scope": 423,
            "src": "2522:292:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "2861:216:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                          "typeString": "enum ArtemLottery.LOTTERY_STATE"
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 212,
                          "name": "lottery_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "2892:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                            "typeString": "enum ArtemLottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 213,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "2909:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$27_$",
                              "typeString": "type(enum ArtemLottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25,
                          "src": "2909:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                            "typeString": "enum ArtemLottery.LOTTERY_STATE"
                          }
                        },
                        "src": "2892:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e27742073746172742061206e6577206c6f74746572792079657421",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2943:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f28339c943e38971af61f71129bc568db91d1b5fe6baee3a0d4da6bc146bcf48",
                          "typeString": "literal_string \"Can't start a new lottery yet!\""
                        },
                        "value": "Can't start a new lottery yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f28339c943e38971af61f71129bc568db91d1b5fe6baee3a0d4da6bc146bcf48",
                          "typeString": "literal_string \"Can't start a new lottery yet!\""
                        }
                      ],
                      "id": 211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2871:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2871:114:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "2871:114:7"
                },
                {
                  "expression": {
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 219,
                      "name": "lottery_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2995:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                        "typeString": "enum ArtemLottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 220,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "3011:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$27_$",
                          "typeString": "type(enum ArtemLottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3011:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                        "typeString": "enum ArtemLottery.LOTTERY_STATE"
                      }
                    },
                    "src": "2995:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                      "typeString": "enum ArtemLottery.LOTTERY_STATE"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "2995:34:7"
                },
                {
                  "expression": {
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 224,
                      "name": "lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "3039:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 225,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3055:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3055:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3039:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "3039:31:7"
                }
              ]
            },
            "functionSelector": "160344e2",
            "id": 230,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 209,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 208,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 470,
                  "src": "2851:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2851:9:7"
              }
            ],
            "name": "startLottery",
            "nameLocation": "2829:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2841:2:7"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2861:0:7"
            },
            "scope": 423,
            "src": "2820:257:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "3141:51:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 238,
                        "name": "_shouldRestart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "3170:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 237,
                      "name": "endLotteryInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 289,
                      "src": "3151:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3151:34:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "3151:34:7"
                }
              ]
            },
            "functionSelector": "3dd89b7f",
            "id": 242,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 235,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 234,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 470,
                  "src": "3131:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3131:9:7"
              }
            ],
            "name": "endLottery",
            "nameLocation": "3092:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "mutability": "mutable",
                  "name": "_shouldRestart",
                  "nameLocation": "3108:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "3103:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3103:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3102:21:7"
            },
            "returnParameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3141:0:7"
            },
            "scope": 423,
            "src": "3083:109:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "3256:372:7",
              "statements": [
                {
                  "expression": {
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 247,
                      "name": "lottery_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "3266:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                        "typeString": "enum ArtemLottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 248,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "3282:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$27_$",
                          "typeString": "type(enum ArtemLottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CALCULATING_WINNER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "3282:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                        "typeString": "enum ArtemLottery.LOTTERY_STATE"
                      }
                    },
                    "src": "3266:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                      "typeString": "enum ArtemLottery.LOTTERY_STATE"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "3266:48:7"
                },
                {
                  "assignments": [
                    253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 253,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "3332:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 288,
                      "src": "3324:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 252,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3324:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3344:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3324:21:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 256,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "3359:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3359:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3376:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3359:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 268,
                  "nodeType": "IfStatement",
                  "src": "3355:92:7",
                  "trueBody": {
                    "id": 267,
                    "nodeType": "Block",
                    "src": "3379:68:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 260,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 253,
                            "src": "3393:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 262,
                                "name": "keyhash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "3423:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 263,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "3432:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 261,
                              "name": "requestRandomness",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 598,
                              "src": "3405:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                                "typeString": "function (bytes32,uint256) returns (bytes32)"
                              }
                            },
                            "id": 264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3405:31:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3393:43:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 266,
                        "nodeType": "ExpressionStatement",
                        "src": "3393:43:7"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 270,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "3481:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 269,
                      "name": "RequestedRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "3461:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3461:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "EmitStatement",
                  "src": "3456:35:7"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 273,
                      "name": "shouldRestart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "3501:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 274,
                      "name": "_shouldRestart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 244,
                      "src": "3517:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3501:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "3501:30:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 277,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "3545:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3545:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3563:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3545:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 287,
                  "nodeType": "IfStatement",
                  "src": "3541:81:7",
                  "trueBody": {
                    "id": 286,
                    "nodeType": "Block",
                    "src": "3566:56:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 282,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 253,
                              "src": "3598:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3609:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 281,
                            "name": "fulfillRandomness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              375
                            ],
                            "referencedDeclaration": 375,
                            "src": "3580:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256)"
                            }
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3580:31:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 285,
                        "nodeType": "ExpressionStatement",
                        "src": "3580:31:7"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "endLotteryInternal",
            "nameLocation": "3207:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "_shouldRestart",
                  "nameLocation": "3231:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "3226:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3226:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3225:21:7"
            },
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3256:0:7"
            },
            "scope": 423,
            "src": "3198:430:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              542
            ],
            "body": {
              "id": 374,
              "nodeType": "Block",
              "src": "3740:704:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                          "typeString": "enum ArtemLottery.LOTTERY_STATE"
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 298,
                          "name": "lottery_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "3771:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                            "typeString": "enum ArtemLottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 299,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "3788:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$27_$",
                              "typeString": "type(enum ArtemLottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CALCULATING_WINNER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "3788:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                            "typeString": "enum ArtemLottery.LOTTERY_STATE"
                          }
                        },
                        "src": "3771:49:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206172656e27742074686572652079657421",
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3834:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2",
                          "typeString": "literal_string \"You aren't there yet!\""
                        },
                        "value": "You aren't there yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2",
                          "typeString": "literal_string \"You aren't there yet!\""
                        }
                      ],
                      "id": 297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3750:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3750:117:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "3750:117:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 306,
                          "name": "_randomness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 293,
                          "src": "3885:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3899:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3885:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "72616e646f6d206e6f7420666f756e64",
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3902:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2622a17f6945d7498ef324c9f4db2ab1966b79df47f51bdfa86624e78e47f28",
                          "typeString": "literal_string \"random not found\""
                        },
                        "value": "random not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2622a17f6945d7498ef324c9f4db2ab1966b79df47f51bdfa86624e78e47f28",
                          "typeString": "literal_string \"random not found\""
                        }
                      ],
                      "id": 305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3877:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3877:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "3877:44:7"
                },
                {
                  "assignments": [
                    313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 313,
                      "mutability": "mutable",
                      "name": "indexOfWinner",
                      "nameLocation": "3939:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 374,
                      "src": "3931:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 312,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3931:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 318,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 314,
                      "name": "_randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "3955:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "expression": {
                        "id": 315,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "3969:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3969:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3955:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3931:52:7"
                },
                {
                  "expression": {
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 319,
                      "name": "recentWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "3993:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 320,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "4008:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 322,
                      "indexExpression": {
                        "id": 321,
                        "name": "indexOfWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "4016:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4008:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3993:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "3993:37:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 326,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 291,
                        "src": "4058:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 327,
                        "name": "recentWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "4070:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 328,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "4084:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 325,
                      "name": "LotteryEnded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "4045:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256)"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4045:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 330,
                  "nodeType": "EmitStatement",
                  "src": "4040:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 336,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4135:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ArtemLottery_$423",
                                "typeString": "contract ArtemLottery"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ArtemLottery_$423",
                                "typeString": "contract ArtemLottery"
                              }
                            ],
                            "id": 335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4127:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 334,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4127:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4127:13:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4127:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 331,
                        "name": "recentWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "4105:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4105:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4105:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "4105:44:7"
                },
                {
                  "expression": {
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 341,
                      "name": "players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "4176:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4208:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4186:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address payable[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 342,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4190:15:7",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 343,
                          "nodeType": "ArrayTypeName",
                          "src": "4190:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                            "typeString": "address payable[]"
                          }
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4186:24:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[] memory"
                      }
                    },
                    "src": "4176:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                      "typeString": "address payable[] storage ref"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "4176:34:7"
                },
                {
                  "expression": {
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 349,
                      "name": "lottery_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "4220:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                        "typeString": "enum ArtemLottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 350,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "4236:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$27_$",
                          "typeString": "type(enum ArtemLottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "4236:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                        "typeString": "enum ArtemLottery.LOTTERY_STATE"
                      }
                    },
                    "src": "4220:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                      "typeString": "enum ArtemLottery.LOTTERY_STATE"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "4220:36:7"
                },
                {
                  "expression": {
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 354,
                      "name": "lotteryCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "4266:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 355,
                        "name": "lotteryCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "4283:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4300:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4283:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4266:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "4266:35:7"
                },
                {
                  "expression": {
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 360,
                      "name": "randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "4311:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 361,
                      "name": "_randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "4324:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4311:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "4311:24:7"
                },
                {
                  "condition": {
                    "id": 364,
                    "name": "shouldRestart",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55,
                    "src": "4349:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 373,
                  "nodeType": "IfStatement",
                  "src": "4345:93:7",
                  "trueBody": {
                    "id": 372,
                    "nodeType": "Block",
                    "src": "4364:74:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 365,
                            "name": "shouldRestart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "4378:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4394:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "4378:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 368,
                        "nodeType": "ExpressionStatement",
                        "src": "4378:21:7"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 369,
                            "name": "startLottery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 230,
                            "src": "4413:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4413:14:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 371,
                        "nodeType": "ExpressionStatement",
                        "src": "4413:14:7"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 375,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nameLocation": "3643:17:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 295,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3727:8:7"
            },
            "parameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "3669:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "3661:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3661:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "_randomness",
                  "nameLocation": "3689:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "3681:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3681:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3660:41:7"
            },
            "returnParameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3740:0:7"
            },
            "scope": 423,
            "src": "3634:810:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              706
            ],
            "body": {
              "id": 405,
              "nodeType": "Block",
              "src": "4597:189:7",
              "statements": [
                {
                  "expression": {
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 385,
                      "name": "upkeepNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 381,
                      "src": "4607:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 386,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4635:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4635:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 388,
                                  "name": "lastTimeStamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51,
                                  "src": "4653:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4635:31:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 390,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4634:33:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 391,
                            "name": "lotteryDurationInSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "4670:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4634:60:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                            "typeString": "enum ArtemLottery.LOTTERY_STATE"
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 393,
                            "name": "lottery_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "4710:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                              "typeString": "enum ArtemLottery.LOTTERY_STATE"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 394,
                              "name": "LOTTERY_STATE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "4727:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$27_$",
                                "typeString": "type(enum ArtemLottery.LOTTERY_STATE)"
                              }
                            },
                            "id": 395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "OPEN",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "4727:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_LOTTERY_STATE_$27",
                              "typeString": "enum ArtemLottery.LOTTERY_STATE"
                            }
                          },
                          "src": "4710:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4634:111:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 398,
                            "name": "players",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "4761:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                              "typeString": "address payable[] storage ref"
                            }
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4761:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4778:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4761:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4634:145:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4607:172:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "4607:172:7"
                }
              ]
            },
            "functionSelector": "6e04ff0d",
            "id": 406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "4459:11:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 379,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4522:8:7"
            },
            "parameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "checkData",
                  "nameLocation": "4486:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4471:24:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4471:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4470:26:7"
            },
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "4553:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4548:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4548:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 383,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "4580:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "4567:24:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4567:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4547:45:7"
            },
            "scope": 423,
            "src": "4450:336:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              712
            ],
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "4861:83:7",
              "statements": [
                {
                  "expression": {
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 412,
                      "name": "lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "4871:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 413,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4887:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4887:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4871:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "4871:31:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4931:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 417,
                      "name": "endLotteryInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 289,
                      "src": "4912:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4912:25:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "4912:25:7"
                }
              ]
            },
            "functionSelector": "4585e33b",
            "id": 422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "4801:13:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 410,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4852:8:7"
            },
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "4830:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "4815:26:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4815:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4814:28:7"
            },
            "returnParameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4861:0:7"
            },
            "scope": 423,
            "src": "4792:152:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 424,
        "src": "329:4617:7",
        "usedErrors": []
      }
    ],
    "src": "32:4915:7"
  },
  "bytecode": "60e060405234801561001057600080fd5b50604051620012b3380380620012b383398101604081905261003191610110565b6001600160a01b0386811660a052851660805261004d336100a2565b600591909155600680546001600160a01b03979097166001600160a81b031990971696909617600160a01b17909555600791909155600855505060c052426009556000600a55600b805460ff1916905561017a565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b038116811461010b57600080fd5b919050565b600080600080600080600060e0888a03121561012b57600080fd5b610134886100f4565b9650610142602089016100f4565b9550610150604089016100f4565b9450606088015193506080880151925060a0880151915060c0880151905092959891949750929550565b60805160a05160c0516110fb620001b86000396000818161024501526105a00152600081816106dd0152610bb001526000610b8101526110fb6000f3fe6080604052600436106101355760003560e01c8063715018a6116100ab57806394985ddd1161006f57806394985ddd14610337578063ddca3f4314610357578063e97dcb621461036d578063f2fde38b14610375578063f71d96cb14610395578063fe2f96b0146103b557600080fd5b8063715018a6146102ab57806381447999146102c057806388ab139a146102ee5780638da5cb5b146103045780638e15f4731461032257600080fd5b80634585e33b116100fd5780634585e33b146101c55780634a4a6b4f146101e55780634f8c70cf146101fb578063621e32171461023357806369ebe78e146102675780636e04ff0d1461027d57600080fd5b806309bc33a71461013a578063160344e21461016257806336013189146101795780633dd89b7f1461018f5780633f3b3b27146101af575b600080fd5b34801561014657600080fd5b5061014f6103df565b6040519081526020015b60405180910390f35b34801561016e57600080fd5b5061017761049f565b005b34801561018557600080fd5b5061014f60045481565b34801561019b57600080fd5b506101776101aa366004610d7c565b610552565b3480156101bb57600080fd5b5061014f60095481565b3480156101d157600080fd5b506101776101e0366004610da0565b610588565b3480156101f157600080fd5b5061014f600a5481565b34801561020757600080fd5b5060035461021b906001600160a01b031681565b6040516001600160a01b039091168152602001610159565b34801561023f57600080fd5b5061014f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561027357600080fd5b5061014f60085481565b34801561028957600080fd5b5061029d610298366004610da0565b61059a565b604051610159929190610e5f565b3480156102b757600080fd5b5061017761060d565b3480156102cc57600080fd5b506006546102e190600160a01b900460ff1681565b6040516101599190610e90565b3480156102fa57600080fd5b5061014f60055481565b34801561031057600080fd5b506001546001600160a01b031661021b565b34801561032e57600080fd5b5061014f610643565b34801561034357600080fd5b50610177610352366004610eb8565b6106d2565b34801561036357600080fd5b5061014f60075481565b610177610754565b34801561038157600080fd5b50610177610390366004610eda565b61080b565b3480156103a157600080fd5b5061021b6103b0366004610f03565b6108a3565b3480156103c157600080fd5b50600b546103cf9060ff1681565b6040519015158152602001610159565b600080600660009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610435573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104599190610f3b565b5050509150506000816402540be4006104729190610fa1565b9050600081600554670de0b6b3a764000061048d9190610fa1565b6104979190610fd6565b949350505050565b6001546001600160a01b031633146104d25760405162461bcd60e51b81526004016104c990610fea565b60405180910390fd5b6001600654600160a01b900460ff1660028111156104f2576104f2610e7a565b1461053f5760405162461bcd60e51b815260206004820152601e60248201527f43616e27742073746172742061206e6577206c6f74746572792079657421000060448201526064016104c9565b6006805460ff60a01b1916905542600955565b6001546001600160a01b0316331461057c5760405162461bcd60e51b81526004016104c990610fea565b610585816108cd565b50565b4260095561059660006108cd565b5050565b600060607f0000000000000000000000000000000000000000000000000000000000000000600954426105cd919061101f565b1180156105f757506000600654600160a01b900460ff1660028111156105f5576105f5610e7a565b145b8015610604575060025415155b91509250929050565b6001546001600160a01b031633146106375760405162461bcd60e51b81526004016104c990610fea565b6106416000610955565b565b600080600080600080600660009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561069f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c39190610f3b565b50919998505050505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461074a5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064016104c9565b61059682826109a7565b6000600654600160a01b900460ff16600281111561077457610774610e7a565b1461077e57600080fd5b6107866103df565b3410156107c75760405162461bcd60e51b815260206004820152600f60248201526e4e6f7420656e6f756768204554482160881b60448201526064016104c9565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b03191633179055565b6001546001600160a01b031633146108355760405162461bcd60e51b81526004016104c990610fea565b6001600160a01b03811661089a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104c9565b61058581610955565b600281815481106108b357600080fd5b6000918252602090912001546001600160a01b0316905081565b6006805460ff60a01b1916600160a11b179055600254600090600110156108ff576108fc600854600754610b7d565b90505b6040518181527fe5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e9060200160405180910390a1600b805460ff1916831515179055600254600110610596576105968160016109a7565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6002600654600160a01b900460ff1660028111156109c7576109c7610e7a565b14610a0c5760405162461bcd60e51b8152602060048201526015602482015274596f75206172656e2774207468657265207965742160581b60448201526064016104c9565b60008111610a4f5760405162461bcd60e51b815260206004820152601060248201526f1c985b991bdb481b9bdd08199bdd5b9960821b60448201526064016104c9565b600254600090610a5f9083611036565b905060028181548110610a7457610a7461104a565b60009182526020918290200154600380546001600160a01b0319166001600160a01b039092169182179055600454604080519283529282015284917fe3224b2c436d7c0f4fedd354654e166662fef1c5bb12c11c3894d584d1f42a61910160405180910390a26003546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610b13573d6000803e3d6000fd5b506040805160008152602081019182905251610b3191600291610cf4565b506006805460ff60a01b1916600160a01b179055600a54610b53906001611060565b600a556004829055600b5460ff1615610b7857600b805460ff19169055610b7861049f565b505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610bed929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610c1a93929190611078565b6020604051808303816000875af1158015610c39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5d91906110a8565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152610cb7906001611060565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120610497565b828054828255906000526020600020908101928215610d49579160200282015b82811115610d4957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610d14565b50610d55929150610d59565b5090565b5b80821115610d555760008155600101610d5a565b801515811461058557600080fd5b600060208284031215610d8e57600080fd5b8135610d9981610d6e565b9392505050565b60008060208385031215610db357600080fd5b823567ffffffffffffffff80821115610dcb57600080fd5b818501915085601f830112610ddf57600080fd5b813581811115610dee57600080fd5b866020828501011115610e0057600080fd5b60209290920196919550909350505050565b6000815180845260005b81811015610e3857602081850181015186830182015201610e1c565b81811115610e4a576000602083870101525b50601f01601f19169290920160200192915050565b82151581526040602082015260006104976040830184610e12565b634e487b7160e01b600052602160045260246000fd5b6020810160038310610eb257634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215610ecb57600080fd5b50508035926020909101359150565b600060208284031215610eec57600080fd5b81356001600160a01b0381168114610d9957600080fd5b600060208284031215610f1557600080fd5b5035919050565b805169ffffffffffffffffffff81168114610f3657600080fd5b919050565b600080600080600060a08688031215610f5357600080fd5b610f5c86610f1c565b9450602086015193506040860151925060608601519150610f7f60808701610f1c565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610fbb57610fbb610f8b565b500290565b634e487b7160e01b600052601260045260246000fd5b600082610fe557610fe5610fc0565b500490565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008282101561103157611031610f8b565b500390565b60008261104557611045610fc0565b500690565b634e487b7160e01b600052603260045260246000fd5b6000821982111561107357611073610f8b565b500190565b60018060a01b038416815282602082015260606040820152600061109f6060830184610e12565b95945050505050565b6000602082840312156110ba57600080fd5b8151610d9981610d6e56fea2646970667358221220e5c5ab74bd9c379c28400f63220db30041b83486ee2bb41a6442a8e79aead0a064736f6c634300080a0033",
  "bytecodeSha1": "c3f31ea9363580b5f0fc4936a7aea71a7096f38a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "ArtemLottery",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "46": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "47": [
            9749,
            9777,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "7": {
        "ArtemLottery.enter": {
          "41": [
            1929,
            1964,
            true
          ],
          "42": [
            1983,
            2012,
            true
          ]
        },
        "ArtemLottery.fulfillRandomness": {
          "43": [
            3771,
            3820,
            true
          ],
          "44": [
            3885,
            3900,
            true
          ],
          "45": [
            4349,
            4362,
            false
          ]
        },
        "ArtemLottery.startLottery": {
          "40": [
            2892,
            2929,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "22": [
            2131,
            2148
          ],
          "23": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "9": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "15": [
            1926,
            1999
          ],
          "16": [
            2009,
            2028
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "1": [
            659,
            676
          ]
        }
      },
      "2": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "10": [
            9741,
            9813
          ],
          "11": [
            9819,
            9859
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "35": [
            7888,
            7975
          ],
          "37": [
            8718,
            8757
          ],
          "39": [
            8763,
            8802
          ]
        }
      },
      "3": {
        "VRFRequestIDBase.makeRequestId": {
          "38": [
            1583,
            1642
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "36": [
            980,
            1058
          ]
        }
      },
      "4": {},
      "5": {},
      "7": {
        "ArtemLottery.checkUpkeep": {
          "8": [
            4607,
            4779
          ]
        },
        "ArtemLottery.endLottery": {
          "5": [
            3151,
            3185
          ]
        },
        "ArtemLottery.endLotteryInternal": {
          "17": [
            3266,
            3314
          ],
          "18": [
            3393,
            3436
          ],
          "19": [
            3456,
            3491
          ],
          "20": [
            3501,
            3531
          ],
          "21": [
            3580,
            3611
          ]
        },
        "ArtemLottery.enter": {
          "12": [
            1921,
            1965
          ],
          "13": [
            1975,
            2032
          ],
          "14": [
            2042,
            2075
          ]
        },
        "ArtemLottery.fulfillRandomness": {
          "24": [
            3750,
            3867
          ],
          "25": [
            3877,
            3921
          ],
          "26": [
            3993,
            4030
          ],
          "27": [
            4040,
            4095
          ],
          "28": [
            4105,
            4149
          ],
          "29": [
            4176,
            4210
          ],
          "30": [
            4220,
            4256
          ],
          "31": [
            4266,
            4301
          ],
          "32": [
            4311,
            4335
          ],
          "33": [
            4378,
            4399
          ],
          "34": [
            4413,
            4427
          ]
        },
        "ArtemLottery.performUpkeep": {
          "6": [
            4871,
            4902
          ],
          "7": [
            4912,
            4937
          ]
        },
        "ArtemLottery.startLottery": {
          "2": [
            2871,
            2985
          ],
          "3": [
            2995,
            3029
          ],
          "4": [
            3039,
            3070
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/KeeperCompatibleInterface",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Ownable",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/VRFRequestIDBase"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "329:4617:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2088:380;;;;;;;;;;;;;:::i;:::-;;;160:25:8;;;148:2;133:18;2088:380:7;;;;;;;;2820:257;;;;;;;;;;;;;:::i;:::-;;491:25;;;;;;;;;;;;;;;;3083:109;;;;;;;;;;-1:-1:-1;3083:109:7;;;;;:::i;:::-;;:::i;1139:28::-;;;;;;;;;;;;;;;;4792:152;;;;;;;;;;-1:-1:-1;4792:152:7;;;;;:::i;:::-;;:::i;1173:29::-;;;;;;;;;;;;;;;;450:35;;;;;;;;;;-1:-1:-1;450:35:7;;;;-1:-1:-1;;;;;450:35:7;;;;;;-1:-1:-1;;;;;1341:32:8;;;1323:51;;1311:2;1296:18;450:35:7;1161:219:8;1084:49:7;;;;;;;;;;;;;;;758:22;;;;;;;;;;;;;;;;4450:336;;;;;;;;;;-1:-1:-1;4450:336:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1605:92:0:-;;;;;;;;;;;;;:::i;694:34:7:-;;;;;;;;;;-1:-1:-1;694:34:7;;;;-1:-1:-1;;;694:34:7;;;;;;;;;;;;;:::i;522:26::-;;;;;;;;;;;;;;;;973:85:0;;;;;;;;;;-1:-1:-1;1045:6:0;;-1:-1:-1;;;;;1045:6:0;973:85;;2522:292:7;;;;;;;;;;;;;:::i;9639:225:2:-;;;;;;;;;;-1:-1:-1;9639:225:2;;;;;:::i;:::-;;:::i;734:18:7:-;;;;;;;;;;;;;;;;1856:226;;;:::i;1846:189:0:-;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;412:32:7:-;;;;;;;;;;-1:-1:-1;412:32:7;;;;;:::i;:::-;;:::i;1208:25::-;;;;;;;;;;-1:-1:-1;1208:25:7;;;;;;;;;;;4109:14:8;;4102:22;4084:41;;4072:2;4057:18;1208:25:7;3944:187:8;2088:380:7;2135:7;2157:12;2179:15;;;;;;;;;-1:-1:-1;;;;;2179:15:7;-1:-1:-1;;;;;2179:31:7;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2154:58;;;;;;2222:21;2254:5;2263:6;2246:23;;;;:::i;:::-;2222:47;;2373:19;2420:13;2396:11;;2410:6;2396:20;;;;:::i;:::-;2395:38;;;;:::i;:::-;2373:60;2088:380;-1:-1:-1;;;;2088:380:7:o;2820:257::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;2909:20:7::1;2892:13;::::0;-1:-1:-1;;;2892:13:7;::::1;;;:37;::::0;::::1;;;;;;:::i;:::-;;2871:114;;;::::0;-1:-1:-1;;;2871:114:7;;5923:2:8;2871:114:7::1;::::0;::::1;5905:21:8::0;5962:2;5942:18;;;5935:30;6001:32;5981:18;;;5974:60;6051:18;;2871:114:7::1;5721:354:8::0;2871:114:7::1;2995:13;:34:::0;;-1:-1:-1;;;;2995:34:7::1;::::0;;3055:15:::1;3039:13;:31:::0;2820:257::o;3083:109::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;3151:34:7::1;3170:14;3151:18;:34::i;:::-;3083:109:::0;:::o;4792:152::-;4887:15;4871:13;:31;4912:25;4931:5;4912:18;:25::i;:::-;4792:152;;:::o;4450:336::-;4548:17;4567:24;4670;4653:13;;4635:15;:31;;;;:::i;:::-;4634:60;:111;;;;-1:-1:-1;4727:18:7;4710:13;;-1:-1:-1;;;4710:13:7;;;;:35;;;;;;;;:::i;:::-;;4634:111;:145;;;;-1:-1:-1;4761:7:7;:14;:18;;4634:145;4607:172;;4450:336;;;;;:::o;1605:92:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;2522:292:7:-;2569:6;2601:14;2629:12;2655:17;2686;2717:22;2752:15;;;;;;;;;-1:-1:-1;;;;;2752:15:7;-1:-1:-1;;;;;2752:31:7;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2587:198:7;;2522:292;-1:-1:-1;;;;;;;;;2522:292:7:o;9639:225:2:-;9749:10;-1:-1:-1;;;;;9763:14:2;9749:28;;9741:72;;;;-1:-1:-1;;;9741:72:2;;6412:2:8;9741:72:2;;;6394:21:8;6451:2;6431:18;;;6424:30;6490:33;6470:18;;;6463:61;6541:18;;9741:72:2;6210:355:8;9741:72:2;9819:40;9837:9;9848:10;9819:17;:40::i;1856:226:7:-;1946:18;1929:13;;-1:-1:-1;;;1929:13:7;;;;:35;;;;;;;;:::i;:::-;;1921:44;;;;;;1996:16;:14;:16::i;:::-;1983:9;:29;;1975:57;;;;-1:-1:-1;;;1975:57:7;;6772:2:8;1975:57:7;;;6754:21:8;6811:2;6791:18;;;6784:30;-1:-1:-1;;;6830:18:8;;;6823:45;6885:18;;1975:57:7;6570:339:8;1975:57:7;2042:7;:33;;;;;;;-1:-1:-1;2042:33:7;;;;;;;;-1:-1:-1;;;;;;2042:33:7;2063:10;2042:33;;;1856:226::o;1846:189:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;7116:2:8;1926:73:0::1;::::0;::::1;7098:21:8::0;7155:2;7135:18;;;7128:30;7194:34;7174:18;;;7167:62;-1:-1:-1;;;7245:18:8;;;7238:36;7291:19;;1926:73:0::1;6914:402:8::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;412:32:7:-:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;412:32:7;;-1:-1:-1;412:32:7;:::o;3198:430::-;3266:13;:48;;-1:-1:-1;;;;3266:48:7;-1:-1:-1;;;3266:48:7;;;3282:32;3359:14;-1:-1:-1;;;;3355:92:7;;;3405:31;3423:7;;3432:3;;3405:17;:31::i;:::-;3393:43;;3355:92;3461:30;;160:25:8;;;3461:30:7;;148:2:8;133:18;3461:30:7;;;;;;;3501:13;:30;;-1:-1:-1;;3501:30:7;;;;;;;3545:7;:14;-1:-1:-1;;3541:81:7;;3580:31;3598:9;3609:1;3580:17;:31::i;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;3634:810:7:-;3788:32;3771:13;;-1:-1:-1;;;3771:13:7;;;;:49;;;;;;;;:::i;:::-;;3750:117;;;;-1:-1:-1;;;3750:117:7;;7523:2:8;3750:117:7;;;7505:21:8;7562:2;7542:18;;;7535:30;-1:-1:-1;;;7581:18:8;;;7574:51;7642:18;;3750:117:7;7321:345:8;3750:117:7;3899:1;3885:11;:15;3877:44;;;;-1:-1:-1;;;3877:44:7;;7873:2:8;3877:44:7;;;7855:21:8;7912:2;7892:18;;;7885:30;-1:-1:-1;;;7931:18:8;;;7924:46;7987:18;;3877:44:7;7671:340:8;3877:44:7;3969:7;:14;3931:21;;3955:28;;:11;:28;:::i;:::-;3931:52;;4008:7;4016:13;4008:22;;;;;;;;:::i;:::-;;;;;;;;;;;;3993:12;:37;;-1:-1:-1;;;;;;3993:37:7;-1:-1:-1;;;;;4008:22:7;;;3993:37;;;;;4084:10;;4045:50;;;8447:51:8;;;8514:18;;;8507:34;4058:10:7;;4045:50;;8420:18:8;4045:50:7;;;;;;;4105:12;;:44;;-1:-1:-1;;;;;4105:12:7;;;;4127:21;4105:44;;;;;:12;:44;:12;:44;4127:21;4105:12;:44;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4186:24:7;;;4208:1;4186:24;;;;;;;;;4176:34;;;:7;;:34;:::i;:::-;-1:-1:-1;4220:13:7;:36;;-1:-1:-1;;;;4220:36:7;-1:-1:-1;;;4220:36:7;;;4283:14;;:18;;-1:-1:-1;4283:18:7;:::i;:::-;4266:14;:35;4311:10;:24;;;4349:13;;;;4345:93;;;4378:13;:21;;-1:-1:-1;;4378:21:7;;;4413:14;:12;:14::i;:::-;3740:704;3634:810;;:::o;7752:1055:2:-;7856:17;7888:4;-1:-1:-1;;;;;7888:20:2;;7909:14;7925:4;7942:8;6609:1;7931:43;;;;;;;;8991:25:8;;;9047:2;9032:18;;9025:34;8979:2;8964:18;;8817:248;7931:43:2;;;;;;;;;;;;;7888:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8206:15:2;8290:16;;;;;;;;;;;;1005:51:3;;;;;9941:25:8;;;9982:18;;;9975:34;;;8283:4:2;10025:18:8;;;10018:60;10094:18;;;;10087:34;;;1005:51:3;;;;;;;;;;9913:19:8;;;;1005:51:3;;;995:62;;;;;;;;;8737:16:2;;;;;;;:20;;8756:1;8737:20;:::i;:::-;8718:6;:16;;;;;;;;;;;;:39;;;;1600:41:3;;;;;10289:19:8;;;10324:12;;;10317:28;;;1600:41:3;;;;;;;;;10361:12:8;;;;1600:41:3;;;1590:52;;;;;8770:32:2;1443:204:3;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:118:8;282:5;275:13;268:21;261:5;258:32;248:60;;304:1;301;294:12;319:241;375:6;428:2;416:9;407:7;403:23;399:32;396:52;;;444:1;441;434:12;396:52;483:9;470:23;502:28;524:5;502:28;:::i;:::-;549:5;319:241;-1:-1:-1;;;319:241:8:o;565:591::-;635:6;643;696:2;684:9;675:7;671:23;667:32;664:52;;;712:1;709;702:12;664:52;752:9;739:23;781:18;822:2;814:6;811:14;808:34;;;838:1;835;828:12;808:34;876:6;865:9;861:22;851:32;;921:7;914:4;910:2;906:13;902:27;892:55;;943:1;940;933:12;892:55;983:2;970:16;1009:2;1001:6;998:14;995:34;;;1025:1;1022;1015:12;995:34;1070:7;1065:2;1056:6;1052:2;1048:15;1044:24;1041:37;1038:57;;;1091:1;1088;1081:12;1038:57;1122:2;1114:11;;;;;1144:6;;-1:-1:-1;565:591:8;;-1:-1:-1;;;;565:591:8:o;1567:471::-;1608:3;1646:5;1640:12;1673:6;1668:3;1661:19;1698:1;1708:162;1722:6;1719:1;1716:13;1708:162;;;1784:4;1840:13;;;1836:22;;1830:29;1812:11;;;1808:20;;1801:59;1737:12;1708:162;;;1888:6;1885:1;1882:13;1879:87;;;1954:1;1947:4;1938:6;1933:3;1929:16;1925:27;1918:38;1879:87;-1:-1:-1;2020:2:8;1999:15;-1:-1:-1;;1995:29:8;1986:39;;;;2027:4;1982:50;;1567:471;-1:-1:-1;;1567:471:8:o;2043:298::-;2226:6;2219:14;2212:22;2201:9;2194:41;2271:2;2266;2255:9;2251:18;2244:30;2175:4;2291:44;2331:2;2320:9;2316:18;2308:6;2291:44;:::i;2346:127::-;2407:10;2402:3;2398:20;2395:1;2388:31;2438:4;2435:1;2428:15;2462:4;2459:1;2452:15;2478:344;2626:2;2611:18;;2659:1;2648:13;;2638:144;;2704:10;2699:3;2695:20;2692:1;2685:31;2739:4;2736:1;2729:15;2767:4;2764:1;2757:15;2638:144;2791:25;;;2478:344;:::o;3215:248::-;3283:6;3291;3344:2;3332:9;3323:7;3319:23;3315:32;3312:52;;;3360:1;3357;3350:12;3312:52;-1:-1:-1;;3383:23:8;;;3453:2;3438:18;;;3425:32;;-1:-1:-1;3215:248:8:o;3468:286::-;3527:6;3580:2;3568:9;3559:7;3555:23;3551:32;3548:52;;;3596:1;3593;3586:12;3548:52;3622:23;;-1:-1:-1;;;;;3674:31:8;;3664:42;;3654:70;;3720:1;3717;3710:12;3759:180;3818:6;3871:2;3859:9;3850:7;3846:23;3842:32;3839:52;;;3887:1;3884;3877:12;3839:52;-1:-1:-1;3910:23:8;;3759:180;-1:-1:-1;3759:180:8:o;4136:179::-;4214:13;;4267:22;4256:34;;4246:45;;4236:73;;4305:1;4302;4295:12;4236:73;4136:179;;;:::o;4320:473::-;4423:6;4431;4439;4447;4455;4508:3;4496:9;4487:7;4483:23;4479:33;4476:53;;;4525:1;4522;4515:12;4476:53;4548:39;4577:9;4548:39;:::i;:::-;4538:49;;4627:2;4616:9;4612:18;4606:25;4596:35;;4671:2;4660:9;4656:18;4650:25;4640:35;;4715:2;4704:9;4700:18;4694:25;4684:35;;4738:49;4782:3;4771:9;4767:19;4738:49;:::i;:::-;4728:59;;4320:473;;;;;;;;:::o;4798:127::-;4859:10;4854:3;4850:20;4847:1;4840:31;4890:4;4887:1;4880:15;4914:4;4911:1;4904:15;4930:168;4970:7;5036:1;5032;5028:6;5024:14;5021:1;5018:21;5013:1;5006:9;4999:17;4995:45;4992:71;;;5043:18;;:::i;:::-;-1:-1:-1;5083:9:8;;4930:168::o;5103:127::-;5164:10;5159:3;5155:20;5152:1;5145:31;5195:4;5192:1;5185:15;5219:4;5216:1;5209:15;5235:120;5275:1;5301;5291:35;;5306:18;;:::i;:::-;-1:-1:-1;5340:9:8;;5235:120::o;5360:356::-;5562:2;5544:21;;;5581:18;;;5574:30;5640:34;5635:2;5620:18;;5613:62;5707:2;5692:18;;5360:356::o;6080:125::-;6120:4;6148:1;6145;6142:8;6139:34;;;6153:18;;:::i;:::-;-1:-1:-1;6190:9:8;;6080:125::o;8016:112::-;8048:1;8074;8064:35;;8079:18;;:::i;:::-;-1:-1:-1;8113:9:8;;8016:112::o;8133:127::-;8194:10;8189:3;8185:20;8182:1;8175:31;8225:4;8222:1;8215:15;8249:4;8246:1;8239:15;8684:128;8724:3;8755:1;8751:6;8748:1;8745:13;8742:39;;;8761:18;;:::i;:::-;-1:-1:-1;8797:9:8;;8684:128::o;9070:385::-;9302:1;9298;9293:3;9289:11;9285:19;9277:6;9273:32;9262:9;9255:51;9342:6;9337:2;9326:9;9322:18;9315:34;9385:2;9380;9369:9;9365:18;9358:30;9236:4;9405:44;9445:2;9434:9;9430:18;9422:6;9405:44;:::i;:::-;9397:52;9070:385;-1:-1:-1;;;;;9070:385:8:o;9460:245::-;9527:6;9580:2;9568:9;9559:7;9555:23;9551:32;9548:52;;;9596:1;9593;9586:12;9548:52;9628:9;9622:16;9647:28;9669:5;9647:28;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "checkUpkeep(bytes)": {
        "notice": "checks if the contract requires work to be done.",
        "params": {
          "checkData": "data passed to the contract when checking for upkeep."
        },
        "returns": {
          "performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed.",
          "upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
        }
      },
      "getLatestPrice()": {
        "notice": "Returns the latest price"
      },
      "lotteryDurationInSeconds()": {
        "notice": "Use an interval in seconds and a timestamp to slow execution of Upkeep"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "performUpkeep(bytes)": {
        "notice": "Performs work on the contract. Executed by the keepers, via the registry.",
        "params": {
          "performData": "is the data which was passed back from the checkData simulation."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    329,
    4946
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x94985DDD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xE97DCB62 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xF71D96CB EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xFE2F96B0 EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x81447999 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x88AB139A EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4585E33B GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x4A4A6B4F EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x4F8C70CF EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x621E3217 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x69EBE78E EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x160344E2 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x36013189 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x3DD89B7F EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0x1AF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x49F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x21B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29D PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP3 SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x60D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x2E1 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0xE90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x643 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0x6D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x754 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21B PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x3CF SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x435 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0xF3B JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 PUSH5 0x2540BE400 PUSH2 0x472 SWAP2 SWAP1 PUSH2 0xFA1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x5 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x497 SWAP2 SWAP1 PUSH2 0xFD6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C9 SWAP1 PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4F2 JUMPI PUSH2 0x4F2 PUSH2 0xE7A JUMP JUMPDEST EQ PUSH2 0x53F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E27742073746172742061206E6577206C6F747465727920796574210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x57C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C9 SWAP1 PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x585 DUP2 PUSH2 0x8CD JUMP JUMPDEST POP JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SSTORE PUSH2 0x596 PUSH1 0x0 PUSH2 0x8CD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH32 0x0 PUSH1 0x9 SLOAD TIMESTAMP PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0x101F JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x5F7 JUMPI POP PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5F5 JUMPI PUSH2 0x5F5 PUSH2 0xE7A JUMP JUMPDEST EQ JUMPDEST DUP1 ISZERO PUSH2 0x604 JUMPI POP PUSH1 0x2 SLOAD ISZERO ISZERO JUMPDEST SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x637 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C9 SWAP1 PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x641 PUSH1 0x0 PUSH2 0x955 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x69F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0xF3B JUMP JUMPDEST POP SWAP2 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x74A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x596 DUP3 DUP3 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x774 JUMPI PUSH2 0x774 PUSH2 0xE7A JUMP JUMPDEST EQ PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x786 PUSH2 0x3DF JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F7420656E6F7567682045544821 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C9 SWAP1 PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x89A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x585 DUP2 PUSH2 0x955 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA1 SHL OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 LT ISZERO PUSH2 0x8FF JUMPI PUSH2 0x8FC PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0xB7D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 LT PUSH2 0x596 JUMPI PUSH2 0x596 DUP2 PUSH1 0x1 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9C7 JUMPI PUSH2 0x9C7 PUSH2 0xE7A JUMP JUMPDEST EQ PUSH2 0xA0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x596F75206172656E27742074686572652079657421 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1C985B991BDB481B9BDD08199BDD5B99 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xA5F SWAP1 DUP4 PUSH2 0x1036 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA74 JUMPI PUSH2 0xA74 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE DUP5 SWAP2 PUSH32 0xE3224B2C436D7C0F4FEDD354654E166662FEF1C5BB12C11C3894D584D1F42A61 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE MLOAD PUSH2 0xB31 SWAP2 PUSH1 0x2 SWAP2 PUSH2 0xCF4 JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0xA SLOAD PUSH2 0xB53 SWAP1 PUSH1 0x1 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x4 DUP3 SWAP1 SSTORE PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB78 JUMPI PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xB78 PUSH2 0x49F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBED SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP9 SWAP1 MSTORE DUP1 DUP4 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP7 DUP5 MSTORE SWAP3 SWAP1 SWAP2 MSTORE PUSH2 0xCB7 SWAP1 PUSH1 0x1 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x497 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xD49 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xD49 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xD14 JUMP JUMPDEST POP PUSH2 0xD55 SWAP3 SWAP2 POP PUSH2 0xD59 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xD55 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD5A JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD99 DUP2 PUSH2 0xD6E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xDEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xE00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xE1C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x497 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE12 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0xEB2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xECB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xF36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5C DUP7 PUSH2 0xF1C JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xF7F PUSH1 0x80 DUP8 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xFBB JUMPI PUSH2 0xFBB PUSH2 0xF8B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFE5 JUMPI PUSH2 0xFE5 PUSH2 0xFC0 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1031 JUMPI PUSH2 0x1031 PUSH2 0xF8B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1045 JUMPI PUSH2 0x1045 PUSH2 0xFC0 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1073 JUMPI PUSH2 0x1073 PUSH2 0xF8B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x109F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xE12 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD99 DUP2 PUSH2 0xD6E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0xC5 0xAB PUSH21 0xBD9C379C28400F63220DB30041B83486EE2BB41A64 TIMESTAMP 0xA8 0xE7 SWAP11 0xEA 0xD0 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        329,
        4946
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "LT",
      "path": "7"
    },
    "9": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x135"
    },
    "12": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "SHR",
      "path": "7"
    },
    "19": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "20": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "25": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "GT",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAB"
    },
    "29": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "30": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "31": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x94985DDD"
    },
    "36": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "GT",
      "path": "7"
    },
    "37": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "41": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "42": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x94985DDD"
    },
    "47": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "48": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x337"
    },
    "51": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "52": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "53": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDDCA3F43"
    },
    "58": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "59": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x357"
    },
    "62": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "63": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "64": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xE97DCB62"
    },
    "69": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "70": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36D"
    },
    "73": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "74": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "75": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "81": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x375"
    },
    "84": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "85": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "86": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF71D96CB"
    },
    "91": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "92": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x395"
    },
    "95": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "96": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "97": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFE2F96B0"
    },
    "102": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "103": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3B5"
    },
    "106": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "107": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "110": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "REVERT",
      "path": "7"
    },
    "111": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "112": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "113": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "118": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "119": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2AB"
    },
    "122": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "123": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "124": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x81447999"
    },
    "129": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "130": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C0"
    },
    "133": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "134": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "135": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x88AB139A"
    },
    "140": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "141": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2EE"
    },
    "144": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "145": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "146": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "151": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "152": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x304"
    },
    "155": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "156": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "157": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8E15F473"
    },
    "162": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "163": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x322"
    },
    "166": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "167": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "170": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "REVERT",
      "path": "7"
    },
    "171": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "172": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "173": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x4585E33B"
    },
    "178": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "GT",
      "path": "7"
    },
    "179": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFD"
    },
    "182": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "183": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "184": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x4585E33B"
    },
    "189": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "190": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C5"
    },
    "193": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "194": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "195": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x4A4A6B4F"
    },
    "200": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "201": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E5"
    },
    "204": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "205": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "206": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x4F8C70CF"
    },
    "211": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "212": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FB"
    },
    "215": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "216": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "217": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x621E3217"
    },
    "222": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "223": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x233"
    },
    "226": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "227": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "228": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x69EBE78E"
    },
    "233": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "234": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x267"
    },
    "237": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "238": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "239": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6E04FF0D"
    },
    "244": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "245": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27D"
    },
    "248": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "249": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "251": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "252": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "REVERT",
      "path": "7"
    },
    "253": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "254": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "255": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x9BC33A7"
    },
    "260": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "261": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13A"
    },
    "264": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "265": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "266": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x160344E2"
    },
    "271": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "272": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x162"
    },
    "275": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "276": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "277": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x36013189"
    },
    "282": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "283": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x179"
    },
    "286": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "287": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "288": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3DD89B7F"
    },
    "293": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "294": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18F"
    },
    "297": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "298": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "299": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3F3B3B27"
    },
    "304": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "EQ",
      "path": "7"
    },
    "305": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AF"
    },
    "308": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "309": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "310": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "312": {
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "DUP1",
      "path": "7"
    },
    "313": {
      "first_revert": true,
      "fn": null,
      "offset": [
        329,
        4946
      ],
      "op": "REVERT",
      "path": "7"
    },
    "314": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "315": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "316": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "DUP1",
      "path": "7"
    },
    "317": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "318": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x146"
    },
    "321": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "322": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "324": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "DUP1",
      "path": "7"
    },
    "325": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "REVERT",
      "path": "7"
    },
    "326": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "327": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "POP",
      "path": "7"
    },
    "328": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "331": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DF"
    },
    "334": {
      "fn": "ArtemLottery.getEntranceFee",
      "jump": "i",
      "offset": [
        2088,
        2468
      ],
      "op": "JUMP",
      "path": "7"
    },
    "335": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "336": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "338": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "339": {
      "op": "SWAP1"
    },
    "340": {
      "op": "DUP2"
    },
    "341": {
      "op": "MSTORE"
    },
    "342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "344": {
      "op": "ADD"
    },
    "345": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "346": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "348": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "349": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "DUP1",
      "path": "7"
    },
    "350": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "351": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "SUB",
      "path": "7"
    },
    "352": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "353": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "RETURN",
      "path": "7"
    },
    "354": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2820,
        3077
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "355": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2820,
        3077
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "356": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2820,
        3077
      ],
      "op": "DUP1",
      "path": "7"
    },
    "357": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2820,
        3077
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "358": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2820,
        3077
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16E"
    },
    "361": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2820,
        3077
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "362": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2820,
        3077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "364": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2820,
        3077
      ],
      "op": "DUP1",
      "path": "7"
    },
    "365": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2820,
        3077
      ],
      "op": "REVERT",
      "path": "7"
    },
    "366": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2820,
        3077
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "367": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2820,
        3077
      ],
      "op": "POP",
      "path": "7"
    },
    "368": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2820,
        3077
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x177"
    },
    "371": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2820,
        3077
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x49F"
    },
    "374": {
      "fn": "ArtemLottery.startLottery",
      "jump": "i",
      "offset": [
        2820,
        3077
      ],
      "op": "JUMP",
      "path": "7"
    },
    "375": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2820,
        3077
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "376": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2820,
        3077
      ],
      "op": "STOP",
      "path": "7"
    },
    "377": {
      "offset": [
        491,
        516
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "378": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        491,
        516
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "379": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        491,
        516
      ],
      "op": "DUP1",
      "path": "7"
    },
    "380": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        491,
        516
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "381": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        491,
        516
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x185"
    },
    "384": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        491,
        516
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "385": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        491,
        516
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "387": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        491,
        516
      ],
      "op": "DUP1",
      "path": "7"
    },
    "388": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        491,
        516
      ],
      "op": "REVERT",
      "path": "7"
    },
    "389": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        491,
        516
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "390": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        491,
        516
      ],
      "op": "POP",
      "path": "7"
    },
    "391": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        491,
        516
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "394": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        491,
        516
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "396": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        491,
        516
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "397": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        491,
        516
      ],
      "op": "DUP2",
      "path": "7"
    },
    "398": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        491,
        516
      ],
      "op": "JUMP",
      "path": "7"
    },
    "399": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "400": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "401": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "DUP1",
      "path": "7"
    },
    "402": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "403": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19B"
    },
    "406": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "407": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "409": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "DUP1",
      "path": "7"
    },
    "410": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "REVERT",
      "path": "7"
    },
    "411": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "412": {
      "op": "POP"
    },
    "413": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x177"
    },
    "416": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AA"
    },
    "419": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "420": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "422": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD7C"
    },
    "425": {
      "fn": "ArtemLottery.endLottery",
      "jump": "i",
      "offset": [
        3083,
        3192
      ],
      "op": "JUMP",
      "path": "7"
    },
    "426": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "427": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x552"
    },
    "430": {
      "fn": "ArtemLottery.endLottery",
      "jump": "i",
      "offset": [
        3083,
        3192
      ],
      "op": "JUMP",
      "path": "7"
    },
    "431": {
      "offset": [
        1139,
        1167
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "432": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1139,
        1167
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "433": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1139,
        1167
      ],
      "op": "DUP1",
      "path": "7"
    },
    "434": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1139,
        1167
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "435": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1139,
        1167
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BB"
    },
    "438": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1139,
        1167
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "439": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1139,
        1167
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "441": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1139,
        1167
      ],
      "op": "DUP1",
      "path": "7"
    },
    "442": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1139,
        1167
      ],
      "op": "REVERT",
      "path": "7"
    },
    "443": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1139,
        1167
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "444": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1139,
        1167
      ],
      "op": "POP",
      "path": "7"
    },
    "445": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1139,
        1167
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "448": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1139,
        1167
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "450": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1139,
        1167
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "451": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1139,
        1167
      ],
      "op": "DUP2",
      "path": "7"
    },
    "452": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        1139,
        1167
      ],
      "op": "JUMP",
      "path": "7"
    },
    "453": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "454": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "455": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "DUP1",
      "path": "7"
    },
    "456": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "457": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D1"
    },
    "460": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "461": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "463": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "DUP1",
      "path": "7"
    },
    "464": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "REVERT",
      "path": "7"
    },
    "465": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "466": {
      "op": "POP"
    },
    "467": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x177"
    },
    "470": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E0"
    },
    "473": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "474": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "476": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDA0"
    },
    "479": {
      "fn": "ArtemLottery.performUpkeep",
      "jump": "i",
      "offset": [
        4792,
        4944
      ],
      "op": "JUMP",
      "path": "7"
    },
    "480": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "481": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x588"
    },
    "484": {
      "fn": "ArtemLottery.performUpkeep",
      "jump": "i",
      "offset": [
        4792,
        4944
      ],
      "op": "JUMP",
      "path": "7"
    },
    "485": {
      "offset": [
        1173,
        1202
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "486": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1173,
        1202
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "487": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1173,
        1202
      ],
      "op": "DUP1",
      "path": "7"
    },
    "488": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1173,
        1202
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "489": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1173,
        1202
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F1"
    },
    "492": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1173,
        1202
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "493": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1173,
        1202
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "495": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1173,
        1202
      ],
      "op": "DUP1",
      "path": "7"
    },
    "496": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1173,
        1202
      ],
      "op": "REVERT",
      "path": "7"
    },
    "497": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1173,
        1202
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "498": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1173,
        1202
      ],
      "op": "POP",
      "path": "7"
    },
    "499": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1173,
        1202
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "502": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1173,
        1202
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "504": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1173,
        1202
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "505": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1173,
        1202
      ],
      "op": "DUP2",
      "path": "7"
    },
    "506": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1173,
        1202
      ],
      "op": "JUMP",
      "path": "7"
    },
    "507": {
      "offset": [
        450,
        485
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "508": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "509": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "DUP1",
      "path": "7"
    },
    "510": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "511": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x207"
    },
    "514": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "515": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "517": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "DUP1",
      "path": "7"
    },
    "518": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "REVERT",
      "path": "7"
    },
    "519": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "520": {
      "op": "POP"
    },
    "521": {
      "offset": [
        450,
        485
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "523": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "524": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21B"
    },
    "527": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "534": {
      "op": "SHL"
    },
    "535": {
      "op": "SUB"
    },
    "536": {
      "offset": [
        450,
        485
      ],
      "op": "AND",
      "path": "7"
    },
    "537": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "DUP2",
      "path": "7"
    },
    "538": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "JUMP",
      "path": "7"
    },
    "539": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "540": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "542": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        450,
        485
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "549": {
      "op": "SHL"
    },
    "550": {
      "op": "SUB"
    },
    "551": {
      "op": "SWAP1"
    },
    "552": {
      "op": "SWAP2"
    },
    "553": {
      "op": "AND"
    },
    "554": {
      "op": "DUP2"
    },
    "555": {
      "op": "MSTORE"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "558": {
      "op": "ADD"
    },
    "559": {
      "offset": [
        450,
        485
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x159"
    },
    "562": {
      "op": "JUMP"
    },
    "563": {
      "offset": [
        1084,
        1133
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "564": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1084,
        1133
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "565": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1084,
        1133
      ],
      "op": "DUP1",
      "path": "7"
    },
    "566": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1084,
        1133
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "567": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1084,
        1133
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x23F"
    },
    "570": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1084,
        1133
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "571": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1084,
        1133
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "573": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1084,
        1133
      ],
      "op": "DUP1",
      "path": "7"
    },
    "574": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1084,
        1133
      ],
      "op": "REVERT",
      "path": "7"
    },
    "575": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1084,
        1133
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "576": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1084,
        1133
      ],
      "op": "POP",
      "path": "7"
    },
    "577": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1084,
        1133
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "580": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1084,
        1133
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x0"
    },
    "613": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1084,
        1133
      ],
      "op": "DUP2",
      "path": "7"
    },
    "614": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        1084,
        1133
      ],
      "op": "JUMP",
      "path": "7"
    },
    "615": {
      "offset": [
        758,
        780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "616": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        758,
        780
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "617": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        758,
        780
      ],
      "op": "DUP1",
      "path": "7"
    },
    "618": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        758,
        780
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "619": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        758,
        780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x273"
    },
    "622": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        758,
        780
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "623": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        758,
        780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "625": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        758,
        780
      ],
      "op": "DUP1",
      "path": "7"
    },
    "626": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        758,
        780
      ],
      "op": "REVERT",
      "path": "7"
    },
    "627": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        758,
        780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "628": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        758,
        780
      ],
      "op": "POP",
      "path": "7"
    },
    "629": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        758,
        780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "632": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        758,
        780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "634": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        758,
        780
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "635": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        758,
        780
      ],
      "op": "DUP2",
      "path": "7"
    },
    "636": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        758,
        780
      ],
      "op": "JUMP",
      "path": "7"
    },
    "637": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "638": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "639": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "DUP1",
      "path": "7"
    },
    "640": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "641": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x289"
    },
    "644": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "645": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "647": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "DUP1",
      "path": "7"
    },
    "648": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "REVERT",
      "path": "7"
    },
    "649": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "650": {
      "op": "POP"
    },
    "651": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29D"
    },
    "654": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x298"
    },
    "657": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "658": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "660": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDA0"
    },
    "663": {
      "fn": "ArtemLottery.checkUpkeep",
      "jump": "i",
      "offset": [
        4450,
        4786
      ],
      "op": "JUMP",
      "path": "7"
    },
    "664": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "665": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x59A"
    },
    "668": {
      "fn": "ArtemLottery.checkUpkeep",
      "jump": "i",
      "offset": [
        4450,
        4786
      ],
      "op": "JUMP",
      "path": "7"
    },
    "669": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "670": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "672": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "673": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x159"
    },
    "676": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "677": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "678": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "679": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE5F"
    },
    "682": {
      "fn": "ArtemLottery.checkUpkeep",
      "jump": "i",
      "offset": [
        4450,
        4786
      ],
      "op": "JUMP",
      "path": "7"
    },
    "683": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "684": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "685": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "686": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "687": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7"
    },
    "690": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "691": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "693": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "694": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "REVERT",
      "path": "0"
    },
    "695": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "696": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "POP",
      "path": "0"
    },
    "697": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177"
    },
    "700": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60D"
    },
    "703": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "704": {
      "offset": [
        694,
        728
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "705": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "706": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "DUP1",
      "path": "7"
    },
    "707": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "708": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2CC"
    },
    "711": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "712": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "714": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "DUP1",
      "path": "7"
    },
    "715": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "REVERT",
      "path": "7"
    },
    "716": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "717": {
      "op": "POP"
    },
    "718": {
      "offset": [
        694,
        728
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "720": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "721": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E1"
    },
    "724": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "729": {
      "op": "SHL"
    },
    "730": {
      "offset": [
        694,
        728
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "731": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "DIV",
      "path": "7"
    },
    "732": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "734": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "AND",
      "path": "7"
    },
    "735": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "DUP2",
      "path": "7"
    },
    "736": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "JUMP",
      "path": "7"
    },
    "737": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "738": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "740": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "741": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x159"
    },
    "744": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "745": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "746": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        694,
        728
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE90"
    },
    "749": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        694,
        728
      ],
      "op": "JUMP",
      "path": "7"
    },
    "750": {
      "offset": [
        522,
        548
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "751": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        522,
        548
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "752": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        522,
        548
      ],
      "op": "DUP1",
      "path": "7"
    },
    "753": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        522,
        548
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "754": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        522,
        548
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2FA"
    },
    "757": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        522,
        548
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "758": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        522,
        548
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "760": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        522,
        548
      ],
      "op": "DUP1",
      "path": "7"
    },
    "761": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        522,
        548
      ],
      "op": "REVERT",
      "path": "7"
    },
    "762": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        522,
        548
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "763": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        522,
        548
      ],
      "op": "POP",
      "path": "7"
    },
    "764": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        522,
        548
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "767": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        522,
        548
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "769": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        522,
        548
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "770": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        522,
        548
      ],
      "op": "DUP2",
      "path": "7"
    },
    "771": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        522,
        548
      ],
      "op": "JUMP",
      "path": "7"
    },
    "772": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "773": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "774": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "775": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "776": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310"
    },
    "779": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "780": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "782": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "783": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "REVERT",
      "path": "0"
    },
    "784": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "785": {
      "op": "POP"
    },
    "786": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x1"
    },
    "788": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "795": {
      "op": "SHL"
    },
    "796": {
      "op": "SUB"
    },
    "797": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "798": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "801": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "802": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2522,
        2814
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "803": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2522,
        2814
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "804": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2522,
        2814
      ],
      "op": "DUP1",
      "path": "7"
    },
    "805": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2522,
        2814
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "806": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2522,
        2814
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32E"
    },
    "809": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2522,
        2814
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "810": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2522,
        2814
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "812": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2522,
        2814
      ],
      "op": "DUP1",
      "path": "7"
    },
    "813": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2522,
        2814
      ],
      "op": "REVERT",
      "path": "7"
    },
    "814": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2522,
        2814
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "815": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2522,
        2814
      ],
      "op": "POP",
      "path": "7"
    },
    "816": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2522,
        2814
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "819": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2522,
        2814
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x643"
    },
    "822": {
      "fn": "ArtemLottery.getLatestPrice",
      "jump": "i",
      "offset": [
        2522,
        2814
      ],
      "op": "JUMP",
      "path": "7"
    },
    "823": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "824": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "825": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "826": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "827": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x343"
    },
    "830": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "831": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "833": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "834": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "REVERT",
      "path": "2"
    },
    "835": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "836": {
      "op": "POP"
    },
    "837": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x177"
    },
    "840": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x352"
    },
    "843": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "844": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "846": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEB8"
    },
    "849": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "2"
    },
    "850": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "851": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D2"
    },
    "854": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "2"
    },
    "855": {
      "offset": [
        734,
        752
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "856": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        734,
        752
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "857": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        734,
        752
      ],
      "op": "DUP1",
      "path": "7"
    },
    "858": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        734,
        752
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "859": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        734,
        752
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x363"
    },
    "862": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        734,
        752
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "863": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        734,
        752
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "865": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        734,
        752
      ],
      "op": "DUP1",
      "path": "7"
    },
    "866": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        734,
        752
      ],
      "op": "REVERT",
      "path": "7"
    },
    "867": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        734,
        752
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "868": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        734,
        752
      ],
      "op": "POP",
      "path": "7"
    },
    "869": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        734,
        752
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "872": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        734,
        752
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "874": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        734,
        752
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "875": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        734,
        752
      ],
      "op": "DUP2",
      "path": "7"
    },
    "876": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        734,
        752
      ],
      "op": "JUMP",
      "path": "7"
    },
    "877": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1856,
        2082
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "878": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1856,
        2082
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x177"
    },
    "881": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1856,
        2082
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x754"
    },
    "884": {
      "fn": "ArtemLottery.enter",
      "jump": "i",
      "offset": [
        1856,
        2082
      ],
      "op": "JUMP",
      "path": "7"
    },
    "885": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "886": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "887": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "888": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "889": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x381"
    },
    "892": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "893": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "895": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "896": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "REVERT",
      "path": "0"
    },
    "897": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "898": {
      "op": "POP"
    },
    "899": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177"
    },
    "902": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x390"
    },
    "905": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "906": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "908": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEDA"
    },
    "911": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "912": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "913": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80B"
    },
    "916": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "917": {
      "offset": [
        412,
        444
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "919": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "DUP1",
      "path": "7"
    },
    "920": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "921": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A1"
    },
    "924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "925": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "927": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "DUP1",
      "path": "7"
    },
    "928": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "REVERT",
      "path": "7"
    },
    "929": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "930": {
      "op": "POP"
    },
    "931": {
      "offset": [
        412,
        444
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21B"
    },
    "934": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3B0"
    },
    "937": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "938": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "940": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF03"
    },
    "943": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        412,
        444
      ],
      "op": "JUMP",
      "path": "7"
    },
    "944": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "945": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8A3"
    },
    "948": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        412,
        444
      ],
      "op": "JUMP",
      "path": "7"
    },
    "949": {
      "offset": [
        1208,
        1233
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "950": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "951": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "DUP1",
      "path": "7"
    },
    "952": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "953": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3C1"
    },
    "956": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "957": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "959": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "DUP1",
      "path": "7"
    },
    "960": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "REVERT",
      "path": "7"
    },
    "961": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "962": {
      "op": "POP"
    },
    "963": {
      "offset": [
        1208,
        1233
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "965": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "966": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3CF"
    },
    "969": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "970": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "972": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "AND",
      "path": "7"
    },
    "973": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "DUP2",
      "path": "7"
    },
    "974": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "JUMP",
      "path": "7"
    },
    "975": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "976": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "978": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1208,
        1233
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "979": {
      "op": "SWAP1"
    },
    "980": {
      "op": "ISZERO"
    },
    "981": {
      "op": "ISZERO"
    },
    "982": {
      "op": "DUP2"
    },
    "983": {
      "op": "MSTORE"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "986": {
      "op": "ADD"
    },
    "987": {
      "offset": [
        1208,
        1233
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x159"
    },
    "990": {
      "op": "JUMP"
    },
    "991": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "992": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2135,
        2142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "994": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2157,
        2169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "995": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2194
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "997": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2194
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "999": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2194
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1000": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2194
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1001": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2194
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1002": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2194
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "1005": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2194
      ],
      "op": "EXP",
      "path": "7"
    },
    "1006": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2194
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1007": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2194
      ],
      "op": "DIV",
      "path": "7"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1014": {
      "op": "SHL"
    },
    "1015": {
      "op": "SUB"
    },
    "1016": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2194
      ],
      "op": "AND",
      "path": "7"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1023": {
      "op": "SHL"
    },
    "1024": {
      "op": "SUB"
    },
    "1025": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2210
      ],
      "op": "AND",
      "path": "7"
    },
    "1026": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2210
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFEAF968C"
    },
    "1031": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1033": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1034": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1035": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "1040": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "AND",
      "path": "7"
    },
    "1041": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "1043": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "SHL",
      "path": "7"
    },
    "1044": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1045": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1046": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1048": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "ADD",
      "path": "7"
    },
    "1049": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA0"
    },
    "1051": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1053": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1054": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1055": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1056": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "SUB",
      "path": "7"
    },
    "1057": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1058": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1059": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "GAS",
      "path": "7"
    },
    "1060": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "1061": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1062": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1063": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1064": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x435"
    },
    "1067": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1068": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1069": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1071": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1072": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1073": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1074": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1076": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1077": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1078": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "POP",
      "path": "7"
    },
    "1079": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "POP",
      "path": "7"
    },
    "1080": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "POP",
      "path": "7"
    },
    "1081": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "POP",
      "path": "7"
    },
    "1082": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1084": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1085": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1086": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1088": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "NOT",
      "path": "7"
    },
    "1089": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1091": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1092": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "ADD",
      "path": "7"
    },
    "1093": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "AND",
      "path": "7"
    },
    "1094": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1095": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "ADD",
      "path": "7"
    },
    "1096": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1097": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1099": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1100": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "POP",
      "path": "7"
    },
    "1101": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1102": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "ADD",
      "path": "7"
    },
    "1103": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1104": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x459"
    },
    "1107": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1108": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1109": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3B"
    },
    "1112": {
      "fn": "ArtemLottery.getEntranceFee",
      "jump": "i",
      "offset": [
        2179,
        2212
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1113": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2179,
        2212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1114": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2154,
        2212
      ],
      "op": "POP",
      "path": "7"
    },
    "1115": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2154,
        2212
      ],
      "op": "POP",
      "path": "7"
    },
    "1116": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2154,
        2212
      ],
      "op": "POP",
      "path": "7"
    },
    "1117": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2154,
        2212
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1118": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2154,
        2212
      ],
      "op": "POP",
      "path": "7"
    },
    "1119": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2154,
        2212
      ],
      "op": "POP",
      "path": "7"
    },
    "1120": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2222,
        2243
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1122": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2254,
        2259
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1123": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2263,
        2269
      ],
      "op": "PUSH5",
      "path": "7",
      "value": "0x2540BE400"
    },
    "1129": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2246,
        2269
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x472"
    },
    "1132": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2246,
        2269
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1133": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2246,
        2269
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1134": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2246,
        2269
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFA1"
    },
    "1137": {
      "fn": "ArtemLottery.getEntranceFee",
      "jump": "i",
      "offset": [
        2246,
        2269
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1138": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2246,
        2269
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1139": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2222,
        2269
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1140": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2222,
        2269
      ],
      "op": "POP",
      "path": "7"
    },
    "1141": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2373,
        2392
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1143": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2420,
        2433
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1144": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2396,
        2407
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "1146": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2396,
        2407
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1147": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2410,
        2416
      ],
      "op": "PUSH8",
      "path": "7",
      "value": "0xDE0B6B3A7640000"
    },
    "1156": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2396,
        2416
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x48D"
    },
    "1159": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2396,
        2416
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1160": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2396,
        2416
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1161": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2396,
        2416
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFA1"
    },
    "1164": {
      "fn": "ArtemLottery.getEntranceFee",
      "jump": "i",
      "offset": [
        2396,
        2416
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1165": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2396,
        2416
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1166": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2395,
        2433
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x497"
    },
    "1169": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2395,
        2433
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1170": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2395,
        2433
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1171": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2395,
        2433
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFD6"
    },
    "1174": {
      "fn": "ArtemLottery.getEntranceFee",
      "jump": "i",
      "offset": [
        2395,
        2433
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1175": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2395,
        2433
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1176": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2373,
        2433
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1177": {
      "fn": "ArtemLottery.getEntranceFee",
      "offset": [
        2088,
        2468
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1178": {
      "op": "POP"
    },
    "1179": {
      "op": "POP"
    },
    "1180": {
      "op": "POP"
    },
    "1181": {
      "op": "POP"
    },
    "1182": {
      "fn": "ArtemLottery.getEntranceFee",
      "jump": "o",
      "offset": [
        2088,
        2468
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1183": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2820,
        3077
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1184": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1186": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1193": {
      "op": "SHL"
    },
    "1194": {
      "op": "SUB"
    },
    "1195": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1196": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 1
    },
    "1197": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1198": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D2"
    },
    "1201": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1202": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1204": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1205": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1211": {
      "op": "SHL"
    },
    "1212": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1213": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1214": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1216": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1217": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C9"
    },
    "1220": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1221": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFEA"
    },
    "1224": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1225": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1226": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1228": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1229": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1230": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1231": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "1232": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1233": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1234": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1235": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2909,
        2929
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 2,
      "value": "0x1"
    },
    "1237": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2892,
        2905
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1239": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2892,
        2905
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1244": {
      "op": "SHL"
    },
    "1245": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2892,
        2905
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1246": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2892,
        2905
      ],
      "op": "DIV",
      "path": "7"
    },
    "1247": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2892,
        2905
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1249": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2892,
        2905
      ],
      "op": "AND",
      "path": "7"
    },
    "1250": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2892,
        2929
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1252": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2892,
        2929
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1253": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2892,
        2929
      ],
      "op": "GT",
      "path": "7"
    },
    "1254": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2892,
        2929
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1255": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2892,
        2929
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4F2"
    },
    "1258": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2892,
        2929
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1259": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2892,
        2929
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4F2"
    },
    "1262": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2892,
        2929
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE7A"
    },
    "1265": {
      "fn": "ArtemLottery.startLottery",
      "jump": "i",
      "offset": [
        2892,
        2929
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1266": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2892,
        2929
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1267": {
      "branch": 40,
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2892,
        2929
      ],
      "op": "EQ",
      "path": "7"
    },
    "1268": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2871,
        2985
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x53F"
    },
    "1271": {
      "branch": 40,
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2871,
        2985
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1272": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2871,
        2985
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1274": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2871,
        2985
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1275": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1281": {
      "op": "SHL"
    },
    "1282": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2871,
        2985
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1283": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2871,
        2985
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1286": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2871,
        2985
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1288": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2871,
        2985
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1289": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2871,
        2985
      ],
      "op": "ADD",
      "path": "7"
    },
    "1290": {
      "op": "MSTORE"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1295": {
      "op": "DUP3"
    },
    "1296": {
      "op": "ADD"
    },
    "1297": {
      "op": "MSTORE"
    },
    "1298": {
      "op": "PUSH32",
      "value": "0x43616E27742073746172742061206E6577206C6F747465727920796574210000"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1333": {
      "op": "DUP3"
    },
    "1334": {
      "op": "ADD"
    },
    "1335": {
      "op": "MSTORE"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1338": {
      "op": "ADD"
    },
    "1339": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2871,
        2985
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4C9"
    },
    "1342": {
      "op": "JUMP"
    },
    "1343": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2871,
        2985
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1344": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2995,
        3008
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 3,
      "value": "0x6"
    },
    "1346": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2995,
        3029
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1347": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2995,
        3029
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1352": {
      "op": "SHL"
    },
    "1353": {
      "op": "NOT"
    },
    "1354": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2995,
        3029
      ],
      "op": "AND",
      "path": "7"
    },
    "1355": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2995,
        3029
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1356": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        2995,
        3029
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1357": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        3055,
        3070
      ],
      "op": "TIMESTAMP",
      "path": "7",
      "statement": 4
    },
    "1358": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        3039,
        3052
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "1360": {
      "fn": "ArtemLottery.startLottery",
      "offset": [
        3039,
        3070
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1361": {
      "fn": "ArtemLottery.startLottery",
      "jump": "o",
      "offset": [
        2820,
        3077
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1362": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1363": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1365": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1372": {
      "op": "SHL"
    },
    "1373": {
      "op": "SUB"
    },
    "1374": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1375": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1376": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1377": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57C"
    },
    "1380": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1381": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1383": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1384": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1390": {
      "op": "SHL"
    },
    "1391": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1392": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1393": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1395": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1396": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C9"
    },
    "1399": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1400": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFEA"
    },
    "1403": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1404": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1405": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3151,
        3185
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 5,
      "value": "0x585"
    },
    "1408": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3170,
        3184
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1409": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3151,
        3169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8CD"
    },
    "1412": {
      "fn": "ArtemLottery.endLottery",
      "jump": "i",
      "offset": [
        3151,
        3185
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1413": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3151,
        3185
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1414": {
      "fn": "ArtemLottery.endLottery",
      "offset": [
        3083,
        3192
      ],
      "op": "POP",
      "path": "7"
    },
    "1415": {
      "fn": "ArtemLottery.endLottery",
      "jump": "o",
      "offset": [
        3083,
        3192
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1416": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1417": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4887,
        4902
      ],
      "op": "TIMESTAMP",
      "path": "7",
      "statement": 6
    },
    "1418": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4871,
        4884
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "1420": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4871,
        4902
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1421": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4912,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 7,
      "value": "0x596"
    },
    "1424": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4931,
        4936
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1426": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4912,
        4930
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8CD"
    },
    "1429": {
      "fn": "ArtemLottery.performUpkeep",
      "jump": "i",
      "offset": [
        4912,
        4937
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1430": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4912,
        4937
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1431": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "POP",
      "path": "7"
    },
    "1432": {
      "fn": "ArtemLottery.performUpkeep",
      "offset": [
        4792,
        4944
      ],
      "op": "POP",
      "path": "7"
    },
    "1433": {
      "fn": "ArtemLottery.performUpkeep",
      "jump": "o",
      "offset": [
        4792,
        4944
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1434": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1435": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4548,
        4565
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1437": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4567,
        4591
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1439": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4670,
        4694
      ],
      "op": "PUSH32",
      "path": "7",
      "statement": 8,
      "value": "0x0"
    },
    "1472": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4653,
        4666
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "1474": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4653,
        4666
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1475": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4635,
        4650
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "1476": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4635,
        4666
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5CD"
    },
    "1479": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4635,
        4666
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1480": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4635,
        4666
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1481": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4635,
        4666
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x101F"
    },
    "1484": {
      "fn": "ArtemLottery.checkUpkeep",
      "jump": "i",
      "offset": [
        4635,
        4666
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1485": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4635,
        4666
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1486": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4634,
        4694
      ],
      "op": "GT",
      "path": "7"
    },
    "1487": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4634,
        4745
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1488": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4634,
        4745
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1489": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4634,
        4745
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5F7"
    },
    "1492": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4634,
        4745
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1493": {
      "op": "POP"
    },
    "1494": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4727,
        4745
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1496": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4710,
        4723
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1498": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4710,
        4723
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1503": {
      "op": "SHL"
    },
    "1504": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4710,
        4723
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1505": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4710,
        4723
      ],
      "op": "DIV",
      "path": "7"
    },
    "1506": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4710,
        4723
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1508": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4710,
        4723
      ],
      "op": "AND",
      "path": "7"
    },
    "1509": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4710,
        4745
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1511": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4710,
        4745
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1512": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4710,
        4745
      ],
      "op": "GT",
      "path": "7"
    },
    "1513": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4710,
        4745
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1514": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4710,
        4745
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5F5"
    },
    "1517": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4710,
        4745
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1518": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4710,
        4745
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5F5"
    },
    "1521": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4710,
        4745
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE7A"
    },
    "1524": {
      "fn": "ArtemLottery.checkUpkeep",
      "jump": "i",
      "offset": [
        4710,
        4745
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1525": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4710,
        4745
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1526": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4710,
        4745
      ],
      "op": "EQ",
      "path": "7"
    },
    "1527": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4634,
        4745
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1528": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4634,
        4779
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1529": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4634,
        4779
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1530": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4634,
        4779
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x604"
    },
    "1533": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4634,
        4779
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1534": {
      "op": "POP"
    },
    "1535": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4761,
        4768
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1537": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4761,
        4775
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1538": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4761,
        4779
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1539": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4761,
        4779
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1540": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4634,
        4779
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1541": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4607,
        4779
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1542": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4607,
        4779
      ],
      "op": "POP",
      "path": "7"
    },
    "1543": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1544": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "POP",
      "path": "7"
    },
    "1545": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1546": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1547": {
      "fn": "ArtemLottery.checkUpkeep",
      "offset": [
        4450,
        4786
      ],
      "op": "POP",
      "path": "7"
    },
    "1548": {
      "fn": "ArtemLottery.checkUpkeep",
      "jump": "o",
      "offset": [
        4450,
        4786
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1549": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1550": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1552": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1559": {
      "op": "SHL"
    },
    "1560": {
      "op": "SUB"
    },
    "1561": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1562": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1563": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1564": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x637"
    },
    "1567": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1568": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1570": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1571": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1577": {
      "op": "SHL"
    },
    "1578": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1579": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1580": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1582": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1583": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C9"
    },
    "1586": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1587": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFEA"
    },
    "1590": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1591": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1592": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 9,
      "value": "0x641"
    },
    "1595": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1597": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x955"
    },
    "1600": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1601": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1602": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1603": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2522,
        2814
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1604": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2569,
        2575
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1606": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2601,
        2615
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1607": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2629,
        2641
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1609": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2655,
        2672
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1610": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2686,
        2703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1612": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2717,
        2739
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1613": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2767
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1615": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2767
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1617": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2767
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1618": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2767
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1619": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2767
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1620": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2767
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "1623": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2767
      ],
      "op": "EXP",
      "path": "7"
    },
    "1624": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2767
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1625": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2767
      ],
      "op": "DIV",
      "path": "7"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1632": {
      "op": "SHL"
    },
    "1633": {
      "op": "SUB"
    },
    "1634": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2767
      ],
      "op": "AND",
      "path": "7"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1641": {
      "op": "SHL"
    },
    "1642": {
      "op": "SUB"
    },
    "1643": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2783
      ],
      "op": "AND",
      "path": "7"
    },
    "1644": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2783
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFEAF968C"
    },
    "1649": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1651": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1652": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1653": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "1658": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "AND",
      "path": "7"
    },
    "1659": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "1661": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "SHL",
      "path": "7"
    },
    "1662": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1663": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1664": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1666": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "ADD",
      "path": "7"
    },
    "1667": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA0"
    },
    "1669": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1671": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1672": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1673": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1674": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "SUB",
      "path": "7"
    },
    "1675": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1676": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1677": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "GAS",
      "path": "7"
    },
    "1678": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "1679": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1680": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1681": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1682": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x69F"
    },
    "1685": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1686": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1687": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1689": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1690": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1691": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1692": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1694": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1695": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1696": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "POP",
      "path": "7"
    },
    "1697": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "POP",
      "path": "7"
    },
    "1698": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "POP",
      "path": "7"
    },
    "1699": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "POP",
      "path": "7"
    },
    "1700": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1702": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1703": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1704": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1706": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "NOT",
      "path": "7"
    },
    "1707": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1709": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1710": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "ADD",
      "path": "7"
    },
    "1711": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "AND",
      "path": "7"
    },
    "1712": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1713": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "ADD",
      "path": "7"
    },
    "1714": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1715": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1717": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1718": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "POP",
      "path": "7"
    },
    "1719": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1720": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "ADD",
      "path": "7"
    },
    "1721": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1722": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6C3"
    },
    "1725": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1726": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1727": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3B"
    },
    "1730": {
      "fn": "ArtemLottery.getLatestPrice",
      "jump": "i",
      "offset": [
        2752,
        2785
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1731": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2752,
        2785
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1732": {
      "op": "POP"
    },
    "1733": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2587,
        2785
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1734": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2587,
        2785
      ],
      "op": "SWAP10",
      "path": "7"
    },
    "1735": {
      "fn": "ArtemLottery.getLatestPrice",
      "offset": [
        2522,
        2814
      ],
      "op": "SWAP9",
      "path": "7"
    },
    "1736": {
      "op": "POP"
    },
    "1737": {
      "op": "POP"
    },
    "1738": {
      "op": "POP"
    },
    "1739": {
      "op": "POP"
    },
    "1740": {
      "op": "POP"
    },
    "1741": {
      "op": "POP"
    },
    "1742": {
      "op": "POP"
    },
    "1743": {
      "op": "POP"
    },
    "1744": {
      "op": "POP"
    },
    "1745": {
      "fn": "ArtemLottery.getLatestPrice",
      "jump": "o",
      "offset": [
        2522,
        2814
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1746": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1747": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9759
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 10
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1754": {
      "op": "SHL"
    },
    "1755": {
      "op": "SUB"
    },
    "1756": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9763,
        9777
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "1789": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9777
      ],
      "op": "AND",
      "path": "2"
    },
    "1790": {
      "branch": 47,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9777
      ],
      "op": "EQ",
      "path": "2"
    },
    "1791": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x74A"
    },
    "1794": {
      "branch": 47,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1795": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1797": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1798": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1804": {
      "op": "SHL"
    },
    "1805": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1806": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1809": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1811": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1812": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "ADD",
      "path": "2"
    },
    "1813": {
      "op": "MSTORE"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1818": {
      "op": "DUP3"
    },
    "1819": {
      "op": "ADD"
    },
    "1820": {
      "op": "MSTORE"
    },
    "1821": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1856": {
      "op": "DUP3"
    },
    "1857": {
      "op": "ADD"
    },
    "1858": {
      "op": "MSTORE"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1861": {
      "op": "ADD"
    },
    "1862": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C9"
    },
    "1865": {
      "op": "JUMP"
    },
    "1866": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1867": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9859
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 11,
      "value": "0x596"
    },
    "1870": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9837,
        9846
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1871": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9848,
        9858
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1872": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A7"
    },
    "1875": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9819,
        9859
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1876": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1856,
        2082
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1877": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1946,
        1964
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 12,
      "value": "0x0"
    },
    "1879": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1929,
        1942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1881": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1929,
        1942
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1886": {
      "op": "SHL"
    },
    "1887": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1929,
        1942
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1888": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1929,
        1942
      ],
      "op": "DIV",
      "path": "7"
    },
    "1889": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1929,
        1942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1891": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1929,
        1942
      ],
      "op": "AND",
      "path": "7"
    },
    "1892": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1929,
        1964
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1894": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1929,
        1964
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1895": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1929,
        1964
      ],
      "op": "GT",
      "path": "7"
    },
    "1896": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1929,
        1964
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1897": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1929,
        1964
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x774"
    },
    "1900": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1929,
        1964
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1901": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1929,
        1964
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x774"
    },
    "1904": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1929,
        1964
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE7A"
    },
    "1907": {
      "fn": "ArtemLottery.enter",
      "jump": "i",
      "offset": [
        1929,
        1964
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1908": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1929,
        1964
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1909": {
      "branch": 41,
      "fn": "ArtemLottery.enter",
      "offset": [
        1929,
        1964
      ],
      "op": "EQ",
      "path": "7"
    },
    "1910": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1921,
        1965
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x77E"
    },
    "1913": {
      "branch": 41,
      "fn": "ArtemLottery.enter",
      "offset": [
        1921,
        1965
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1914": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1921,
        1965
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1916": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1921,
        1965
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1917": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1921,
        1965
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1918": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1921,
        1965
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1919": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1996,
        2012
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 13,
      "value": "0x786"
    },
    "1922": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1996,
        2010
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DF"
    },
    "1925": {
      "fn": "ArtemLottery.enter",
      "jump": "i",
      "offset": [
        1996,
        2012
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1926": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1996,
        2012
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1927": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1983,
        1992
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1928": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1983,
        2012
      ],
      "op": "LT",
      "path": "7"
    },
    "1929": {
      "branch": 42,
      "fn": "ArtemLottery.enter",
      "offset": [
        1983,
        2012
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1930": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1975,
        2032
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7C7"
    },
    "1933": {
      "branch": 42,
      "fn": "ArtemLottery.enter",
      "offset": [
        1975,
        2032
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1934": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1975,
        2032
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1936": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1975,
        2032
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1937": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1943": {
      "op": "SHL"
    },
    "1944": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1975,
        2032
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1945": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1975,
        2032
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1948": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1975,
        2032
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1950": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1975,
        2032
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1951": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1975,
        2032
      ],
      "op": "ADD",
      "path": "7"
    },
    "1952": {
      "op": "MSTORE"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1957": {
      "op": "DUP3"
    },
    "1958": {
      "op": "ADD"
    },
    "1959": {
      "op": "MSTORE"
    },
    "1960": {
      "op": "PUSH15",
      "value": "0x4E6F7420656E6F7567682045544821"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "1978": {
      "op": "SHL"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1981": {
      "op": "DUP3"
    },
    "1982": {
      "op": "ADD"
    },
    "1983": {
      "op": "MSTORE"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1986": {
      "op": "ADD"
    },
    "1987": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1975,
        2032
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4C9"
    },
    "1990": {
      "op": "JUMP"
    },
    "1991": {
      "fn": "ArtemLottery.enter",
      "offset": [
        1975,
        2032
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1992": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2049
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 14,
      "value": "0x2"
    },
    "1994": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1995": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1996": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1998": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1999": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "ADD",
      "path": "7"
    },
    "2000": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2001": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2004": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2005": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2006": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2007": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2008": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
    },
    "2041": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "ADD",
      "path": "7"
    },
    "2042": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2043": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2050": {
      "op": "SHL"
    },
    "2051": {
      "op": "SUB"
    },
    "2052": {
      "op": "NOT"
    },
    "2053": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "AND",
      "path": "7"
    },
    "2054": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2063,
        2073
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2055": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "OR",
      "path": "7"
    },
    "2056": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2057": {
      "fn": "ArtemLottery.enter",
      "offset": [
        2042,
        2075
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2058": {
      "fn": "ArtemLottery.enter",
      "jump": "o",
      "offset": [
        1856,
        2082
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2059": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2060": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2062": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2069": {
      "op": "SHL"
    },
    "2070": {
      "op": "SUB"
    },
    "2071": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2072": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2073": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2074": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x835"
    },
    "2077": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2078": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2080": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2081": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2089": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2090": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2092": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2093": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C9"
    },
    "2096": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2097": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFEA"
    },
    "2100": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2101": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2108": {
      "op": "SHL"
    },
    "2109": {
      "op": "SUB"
    },
    "2110": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 15
    },
    "2111": {
      "branch": 46,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "2112": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89A"
    },
    "2115": {
      "branch": 46,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2116": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2118": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2119": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2125": {
      "op": "SHL"
    },
    "2126": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2127": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2130": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2132": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2133": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "2134": {
      "op": "MSTORE"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2139": {
      "op": "DUP3"
    },
    "2140": {
      "op": "ADD"
    },
    "2141": {
      "op": "MSTORE"
    },
    "2142": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2177": {
      "op": "DUP3"
    },
    "2178": {
      "op": "ADD"
    },
    "2179": {
      "op": "MSTORE"
    },
    "2180": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2189": {
      "op": "SHL"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2192": {
      "op": "DUP3"
    },
    "2193": {
      "op": "ADD"
    },
    "2194": {
      "op": "MSTORE"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2197": {
      "op": "ADD"
    },
    "2198": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C9"
    },
    "2201": {
      "op": "JUMP"
    },
    "2202": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2203": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0x585"
    },
    "2206": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2207": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x955"
    },
    "2210": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2211": {
      "offset": [
        412,
        444
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2212": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2214": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2215": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2217": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2218": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "LT",
      "path": "7"
    },
    "2219": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8B3"
    },
    "2222": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2223": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2225": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2226": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2227": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2228": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2230": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2231": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2232": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2233": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2235": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2236": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2237": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2238": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "ADD",
      "path": "7"
    },
    "2239": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2246": {
      "op": "SHL"
    },
    "2247": {
      "op": "SUB"
    },
    "2248": {
      "offset": [
        412,
        444
      ],
      "op": "AND",
      "path": "7"
    },
    "2249": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        412,
        444
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2250": {
      "op": "POP"
    },
    "2251": {
      "offset": [
        412,
        444
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2252": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        412,
        444
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2253": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3198,
        3628
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2254": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3266,
        3279
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 17,
      "value": "0x6"
    },
    "2256": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3266,
        3314
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2257": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3266,
        3314
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2262": {
      "op": "SHL"
    },
    "2263": {
      "op": "NOT"
    },
    "2264": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3266,
        3314
      ],
      "op": "AND",
      "path": "7"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2269": {
      "op": "SHL"
    },
    "2270": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3266,
        3314
      ],
      "op": "OR",
      "path": "7"
    },
    "2271": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3266,
        3314
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2272": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3266,
        3314
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2273": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3282,
        3314
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2275": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3359,
        3373
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2278": {
      "op": "SWAP1"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2281": {
      "op": "LT"
    },
    "2282": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3355,
        3447
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2283": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3355,
        3447
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8FF"
    },
    "2286": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3355,
        3447
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2287": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3405,
        3436
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 18,
      "value": "0x8FC"
    },
    "2290": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3423,
        3430
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2292": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3423,
        3430
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2293": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3432,
        3435
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2295": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3432,
        3435
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2296": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3405,
        3422
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB7D"
    },
    "2299": {
      "fn": "ArtemLottery.endLotteryInternal",
      "jump": "i",
      "offset": [
        3405,
        3436
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2300": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3405,
        3436
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2301": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3393,
        3436
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2302": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3393,
        3436
      ],
      "op": "POP",
      "path": "7"
    },
    "2303": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3355,
        3447
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2304": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3461,
        3491
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 19,
      "value": "0x40"
    },
    "2306": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3461,
        3491
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2307": {
      "op": "DUP2"
    },
    "2308": {
      "op": "DUP2"
    },
    "2309": {
      "op": "MSTORE"
    },
    "2310": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3461,
        3491
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E"
    },
    "2343": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3461,
        3491
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2346": {
      "op": "ADD"
    },
    "2347": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3461,
        3491
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2349": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3461,
        3491
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2350": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3461,
        3491
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2351": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3461,
        3491
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2352": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3461,
        3491
      ],
      "op": "SUB",
      "path": "7"
    },
    "2353": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3461,
        3491
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2354": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3461,
        3491
      ],
      "op": "LOG1",
      "path": "7"
    },
    "2355": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3501,
        3514
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 20,
      "value": "0xB"
    },
    "2357": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3501,
        3531
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2358": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3501,
        3531
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2361": {
      "op": "NOT"
    },
    "2362": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3501,
        3531
      ],
      "op": "AND",
      "path": "7"
    },
    "2363": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3501,
        3531
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2364": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3501,
        3531
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2365": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3501,
        3531
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2366": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3501,
        3531
      ],
      "op": "OR",
      "path": "7"
    },
    "2367": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3501,
        3531
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2368": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3501,
        3531
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2369": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3545,
        3552
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2371": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3545,
        3559
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2374": {
      "op": "LT"
    },
    "2375": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3541,
        3622
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x596"
    },
    "2378": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3541,
        3622
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2379": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3580,
        3611
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 21,
      "value": "0x596"
    },
    "2382": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3598,
        3607
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2383": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3609,
        3610
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2385": {
      "fn": "ArtemLottery.endLotteryInternal",
      "offset": [
        3580,
        3597
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9A7"
    },
    "2388": {
      "fn": "ArtemLottery.endLotteryInternal",
      "jump": "i",
      "offset": [
        3580,
        3611
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2389": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2390": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2392": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2393": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2400": {
      "op": "SHL"
    },
    "2401": {
      "op": "SUB"
    },
    "2402": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 22
    },
    "2403": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2404": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2411": {
      "op": "SHL"
    },
    "2412": {
      "op": "SUB"
    },
    "2413": {
      "op": "NOT"
    },
    "2414": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2415": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "2416": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2417": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "2418": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2419": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2420": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2421": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x40"
    },
    "2423": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2424": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2425": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "2426": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2427": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2428": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2429": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2430": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2463": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2464": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2466": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2467": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2468": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "2469": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "2470": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2471": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3634,
        4444
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2472": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3788,
        3820
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 24,
      "value": "0x2"
    },
    "2474": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3771,
        3784
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2476": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3771,
        3784
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2481": {
      "op": "SHL"
    },
    "2482": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3771,
        3784
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2483": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3771,
        3784
      ],
      "op": "DIV",
      "path": "7"
    },
    "2484": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3771,
        3784
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2486": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3771,
        3784
      ],
      "op": "AND",
      "path": "7"
    },
    "2487": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3771,
        3820
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2489": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3771,
        3820
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2490": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3771,
        3820
      ],
      "op": "GT",
      "path": "7"
    },
    "2491": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3771,
        3820
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2492": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3771,
        3820
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9C7"
    },
    "2495": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3771,
        3820
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2496": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3771,
        3820
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9C7"
    },
    "2499": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3771,
        3820
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE7A"
    },
    "2502": {
      "fn": "ArtemLottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        3771,
        3820
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2503": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3771,
        3820
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2504": {
      "branch": 43,
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3771,
        3820
      ],
      "op": "EQ",
      "path": "7"
    },
    "2505": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3750,
        3867
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA0C"
    },
    "2508": {
      "branch": 43,
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3750,
        3867
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2509": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3750,
        3867
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2511": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3750,
        3867
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2512": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2518": {
      "op": "SHL"
    },
    "2519": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3750,
        3867
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2520": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3750,
        3867
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2523": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3750,
        3867
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2525": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3750,
        3867
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2526": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3750,
        3867
      ],
      "op": "ADD",
      "path": "7"
    },
    "2527": {
      "op": "MSTORE"
    },
    "2528": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2532": {
      "op": "DUP3"
    },
    "2533": {
      "op": "ADD"
    },
    "2534": {
      "op": "MSTORE"
    },
    "2535": {
      "op": "PUSH21",
      "value": "0x596F75206172656E27742074686572652079657421"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "2559": {
      "op": "SHL"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2562": {
      "op": "DUP3"
    },
    "2563": {
      "op": "ADD"
    },
    "2564": {
      "op": "MSTORE"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2567": {
      "op": "ADD"
    },
    "2568": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3750,
        3867
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4C9"
    },
    "2571": {
      "op": "JUMP"
    },
    "2572": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3750,
        3867
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2573": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3899,
        3900
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 25,
      "value": "0x0"
    },
    "2575": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3885,
        3896
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2576": {
      "branch": 44,
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3885,
        3900
      ],
      "op": "GT",
      "path": "7"
    },
    "2577": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3877,
        3921
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA4F"
    },
    "2580": {
      "branch": 44,
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3877,
        3921
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2581": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3877,
        3921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2583": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3877,
        3921
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2584": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2590": {
      "op": "SHL"
    },
    "2591": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3877,
        3921
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2592": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3877,
        3921
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2595": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3877,
        3921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2597": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3877,
        3921
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2598": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3877,
        3921
      ],
      "op": "ADD",
      "path": "7"
    },
    "2599": {
      "op": "MSTORE"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2604": {
      "op": "DUP3"
    },
    "2605": {
      "op": "ADD"
    },
    "2606": {
      "op": "MSTORE"
    },
    "2607": {
      "op": "PUSH16",
      "value": "0x1C985B991BDB481B9BDD08199BDD5B99"
    },
    "2624": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2626": {
      "op": "SHL"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2629": {
      "op": "DUP3"
    },
    "2630": {
      "op": "ADD"
    },
    "2631": {
      "op": "MSTORE"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2634": {
      "op": "ADD"
    },
    "2635": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3877,
        3921
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4C9"
    },
    "2638": {
      "op": "JUMP"
    },
    "2639": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3877,
        3921
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2640": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3969,
        3976
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2642": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3969,
        3983
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2643": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3931,
        3952
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2645": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3931,
        3952
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2646": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3955,
        3983
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA5F"
    },
    "2649": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3955,
        3983
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2650": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3955,
        3966
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2651": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3955,
        3983
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1036"
    },
    "2654": {
      "fn": "ArtemLottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        3955,
        3983
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2655": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3955,
        3983
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2656": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3931,
        3983
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2657": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3931,
        3983
      ],
      "op": "POP",
      "path": "7"
    },
    "2658": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4015
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 26,
      "value": "0x2"
    },
    "2660": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4016,
        4029
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2661": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2662": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2663": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2664": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "LT",
      "path": "7"
    },
    "2665": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA74"
    },
    "2668": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2669": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA74"
    },
    "2672": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x104A"
    },
    "2675": {
      "fn": "ArtemLottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4008,
        4030
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2676": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2677": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2679": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2680": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2681": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2682": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2684": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2685": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2686": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2687": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2688": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "ADD",
      "path": "7"
    },
    "2689": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2690": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3993,
        4005
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2692": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3993,
        4030
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2693": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3993,
        4030
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2700": {
      "op": "SHL"
    },
    "2701": {
      "op": "SUB"
    },
    "2702": {
      "op": "NOT"
    },
    "2703": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3993,
        4030
      ],
      "op": "AND",
      "path": "7"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2710": {
      "op": "SHL"
    },
    "2711": {
      "op": "SUB"
    },
    "2712": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2713": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2714": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4008,
        4030
      ],
      "op": "AND",
      "path": "7"
    },
    "2715": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3993,
        4030
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2716": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3993,
        4030
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2717": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3993,
        4030
      ],
      "op": "OR",
      "path": "7"
    },
    "2718": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3993,
        4030
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2719": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3993,
        4030
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2720": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4084,
        4094
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 27,
      "value": "0x4"
    },
    "2722": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4084,
        4094
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2723": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4045,
        4095
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2725": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4045,
        4095
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2726": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4045,
        4095
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2727": {
      "op": "SWAP3"
    },
    "2728": {
      "op": "DUP4"
    },
    "2729": {
      "op": "MSTORE"
    },
    "2730": {
      "op": "SWAP3"
    },
    "2731": {
      "op": "DUP3"
    },
    "2732": {
      "op": "ADD"
    },
    "2733": {
      "op": "MSTORE"
    },
    "2734": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4058,
        4068
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2735": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4058,
        4068
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2736": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4045,
        4095
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xE3224B2C436D7C0F4FEDD354654E166662FEF1C5BB12C11C3894D584D1F42A61"
    },
    "2769": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4045,
        4095
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2770": {
      "op": "ADD"
    },
    "2771": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4045,
        4095
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2773": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4045,
        4095
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2774": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4045,
        4095
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2775": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4045,
        4095
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2776": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4045,
        4095
      ],
      "op": "SUB",
      "path": "7"
    },
    "2777": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4045,
        4095
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2778": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4045,
        4095
      ],
      "op": "LOG2",
      "path": "7"
    },
    "2779": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4117
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 28,
      "value": "0x3"
    },
    "2781": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4117
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2782": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2784": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2791": {
      "op": "SHL"
    },
    "2792": {
      "op": "SUB"
    },
    "2793": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4117
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2794": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4117
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2795": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4117
      ],
      "op": "AND",
      "path": "7"
    },
    "2796": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4117
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2797": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4127,
        4148
      ],
      "op": "SELFBALANCE",
      "path": "7"
    },
    "2798": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2799": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2800": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8FC"
    },
    "2803": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "MUL",
      "path": "7"
    },
    "2804": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2805": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4117
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2807": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2808": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4117
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2809": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2810": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4127,
        4148
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2811": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4117
      ],
      "op": "DUP9",
      "path": "7"
    },
    "2812": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "DUP9",
      "path": "7"
    },
    "2813": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "CALL",
      "path": "7"
    },
    "2814": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2815": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "POP",
      "path": "7"
    },
    "2816": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "POP",
      "path": "7"
    },
    "2817": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "POP",
      "path": "7"
    },
    "2818": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "POP",
      "path": "7"
    },
    "2819": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2820": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2821": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2822": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB13"
    },
    "2825": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2826": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2827": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2829": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2830": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "2831": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2832": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2834": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2835": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4105,
        4149
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2836": {
      "op": "POP"
    },
    "2837": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4186,
        4210
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 29,
      "value": "0x40"
    },
    "2839": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4186,
        4210
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2840": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4186,
        4210
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2841": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4208,
        4209
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2843": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4186,
        4210
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2844": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4186,
        4210
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2845": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4186,
        4210
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2847": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4186,
        4210
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2848": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4186,
        4210
      ],
      "op": "ADD",
      "path": "7"
    },
    "2849": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4186,
        4210
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2850": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4186,
        4210
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2851": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4186,
        4210
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2852": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4186,
        4210
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2853": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4176,
        4210
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2854": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4176,
        4210
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB31"
    },
    "2857": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4176,
        4210
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2858": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4176,
        4183
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2860": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4176,
        4183
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2861": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4176,
        4210
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCF4"
    },
    "2864": {
      "fn": "ArtemLottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4176,
        4210
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2865": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4176,
        4210
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2866": {
      "op": "POP"
    },
    "2867": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4220,
        4233
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 30,
      "value": "0x6"
    },
    "2869": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4220,
        4256
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2870": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4220,
        4256
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2875": {
      "op": "SHL"
    },
    "2876": {
      "op": "NOT"
    },
    "2877": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4220,
        4256
      ],
      "op": "AND",
      "path": "7"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2882": {
      "op": "SHL"
    },
    "2883": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4220,
        4256
      ],
      "op": "OR",
      "path": "7"
    },
    "2884": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4220,
        4256
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2885": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4220,
        4256
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2886": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4283,
        4297
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 31,
      "value": "0xA"
    },
    "2888": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4283,
        4297
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2889": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4283,
        4301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB53"
    },
    "2892": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4283,
        4301
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2895": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4283,
        4301
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1060"
    },
    "2898": {
      "fn": "ArtemLottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4283,
        4301
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2899": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4283,
        4301
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2900": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4266,
        4280
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "2902": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4266,
        4301
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2903": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4311,
        4321
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 32,
      "value": "0x4"
    },
    "2905": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4311,
        4335
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2906": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4311,
        4335
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2907": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4311,
        4335
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2908": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4349,
        4362
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "2910": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4349,
        4362
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2911": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4349,
        4362
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2913": {
      "branch": 45,
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4349,
        4362
      ],
      "op": "AND",
      "path": "7"
    },
    "2914": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4345,
        4438
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2915": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4345,
        4438
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB78"
    },
    "2918": {
      "branch": 45,
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4345,
        4438
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2919": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4378,
        4391
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 33,
      "value": "0xB"
    },
    "2921": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4378,
        4399
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2922": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4378,
        4399
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2925": {
      "op": "NOT"
    },
    "2926": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4378,
        4399
      ],
      "op": "AND",
      "path": "7"
    },
    "2927": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4378,
        4399
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2928": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4378,
        4399
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2929": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4413,
        4427
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 34,
      "value": "0xB78"
    },
    "2932": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4413,
        4425
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x49F"
    },
    "2935": {
      "fn": "ArtemLottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4413,
        4427
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2936": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        4413,
        4427
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2937": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3740,
        4444
      ],
      "op": "POP",
      "path": "7"
    },
    "2938": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3634,
        4444
      ],
      "op": "POP",
      "path": "7"
    },
    "2939": {
      "fn": "ArtemLottery.fulfillRandomness",
      "offset": [
        3634,
        4444
      ],
      "op": "POP",
      "path": "7"
    },
    "2940": {
      "fn": "ArtemLottery.fulfillRandomness",
      "jump": "o",
      "offset": [
        3634,
        4444
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2941": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7752,
        8807
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2942": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7856,
        7873
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2944": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7892
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 35,
      "value": "0x0"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2983": {
      "op": "SHL"
    },
    "2984": {
      "op": "SUB"
    },
    "2985": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7908
      ],
      "op": "AND",
      "path": "2"
    },
    "2986": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7908
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4000AEA0"
    },
    "2991": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7909,
        7923
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "3024": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7925,
        7929
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3025": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7942,
        7950
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3026": {
      "offset": [
        6609,
        6610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3028": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3030": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3031": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3033": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "ADD",
      "path": "2"
    },
    "3034": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBED"
    },
    "3037": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3038": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3039": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3040": {
      "op": "SWAP2"
    },
    "3041": {
      "op": "DUP3"
    },
    "3042": {
      "op": "MSTORE"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3045": {
      "op": "DUP3"
    },
    "3046": {
      "op": "ADD"
    },
    "3047": {
      "op": "MSTORE"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3050": {
      "op": "ADD"
    },
    "3051": {
      "op": "SWAP1"
    },
    "3052": {
      "op": "JUMP"
    },
    "3053": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3054": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3056": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3057": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3059": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3060": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3061": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SUB",
      "path": "2"
    },
    "3062": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SUB",
      "path": "2"
    },
    "3063": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3064": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3065": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3066": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3068": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3069": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3071": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3072": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3073": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3078": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "AND",
      "path": "2"
    },
    "3079": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3081": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SHL",
      "path": "2"
    },
    "3082": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3083": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3084": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3086": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "2"
    },
    "3087": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1A"
    },
    "3090": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3091": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3092": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3093": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3094": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1078"
    },
    "3097": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3098": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3099": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3101": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3103": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3104": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3105": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3106": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SUB",
      "path": "2"
    },
    "3107": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3108": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3110": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3111": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "GAS",
      "path": "2"
    },
    "3112": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "CALL",
      "path": "2"
    },
    "3113": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3114": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3115": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3116": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC39"
    },
    "3119": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3120": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3121": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3123": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3124": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3125": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3126": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3128": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3129": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3130": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "2"
    },
    "3131": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "2"
    },
    "3132": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "2"
    },
    "3133": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "2"
    },
    "3134": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3136": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3137": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3138": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3140": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "NOT",
      "path": "2"
    },
    "3141": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3143": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3144": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "2"
    },
    "3145": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "AND",
      "path": "2"
    },
    "3146": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3147": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "2"
    },
    "3148": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3149": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3151": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3152": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "2"
    },
    "3153": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3154": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "2"
    },
    "3155": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3156": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC5D"
    },
    "3159": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3160": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3161": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10A8"
    },
    "3164": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3165": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3166": {
      "op": "POP"
    },
    "3167": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8206,
        8221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3169": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3170": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3171": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3172": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3174": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3175": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3176": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3177": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3179": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3180": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3181": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3182": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3183": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 36
    },
    "3184": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3185": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3186": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3187": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "3"
    },
    "3188": {
      "op": "DUP9"
    },
    "3189": {
      "op": "SWAP1"
    },
    "3190": {
      "op": "MSTORE"
    },
    "3191": {
      "op": "DUP1"
    },
    "3192": {
      "op": "DUP4"
    },
    "3193": {
      "op": "ADD"
    },
    "3194": {
      "op": "DUP6"
    },
    "3195": {
      "op": "SWAP1"
    },
    "3196": {
      "op": "MSTORE"
    },
    "3197": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8283,
        8287
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3200": {
      "op": "DUP3"
    },
    "3201": {
      "op": "ADD"
    },
    "3202": {
      "op": "MSTORE"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3205": {
      "op": "DUP1"
    },
    "3206": {
      "op": "DUP3"
    },
    "3207": {
      "op": "ADD"
    },
    "3208": {
      "op": "DUP4"
    },
    "3209": {
      "op": "SWAP1"
    },
    "3210": {
      "op": "MSTORE"
    },
    "3211": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3212": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3213": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3214": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3215": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SUB",
      "path": "3"
    },
    "3216": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3217": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3218": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "3"
    },
    "3219": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3220": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3223": {
      "op": "SWAP1"
    },
    "3224": {
      "op": "SWAP2"
    },
    "3225": {
      "op": "ADD"
    },
    "3226": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3227": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3228": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3229": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3230": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3231": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3232": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3233": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "ADD",
      "path": "3"
    },
    "3234": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3235": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3236": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3237": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3238": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 37
    },
    "3239": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3240": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3241": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3242": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3243": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3244": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3245": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCB7"
    },
    "3248": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3249": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3251": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1060"
    },
    "3254": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8737,
        8757
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3255": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3256": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3258": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3259": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3260": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3261": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3263": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3264": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3265": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3266": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3268": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3269": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3270": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3271": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3272": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3273": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3274": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3275": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3276": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 38
    },
    "3277": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3278": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3279": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3280": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "3"
    },
    "3281": {
      "op": "DUP8"
    },
    "3282": {
      "op": "SWAP1"
    },
    "3283": {
      "op": "MSTORE"
    },
    "3284": {
      "op": "DUP1"
    },
    "3285": {
      "op": "DUP3"
    },
    "3286": {
      "op": "ADD"
    },
    "3287": {
      "op": "DUP5"
    },
    "3288": {
      "op": "SWAP1"
    },
    "3289": {
      "op": "MSTORE"
    },
    "3290": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3291": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3292": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3293": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3294": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SUB",
      "path": "3"
    },
    "3295": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3296": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "3"
    },
    "3297": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3298": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3301": {
      "op": "SWAP1"
    },
    "3302": {
      "op": "SWAP2"
    },
    "3303": {
      "op": "ADD"
    },
    "3304": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3305": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3306": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3307": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3308": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3309": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3310": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "ADD",
      "path": "3"
    },
    "3311": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3312": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8770,
        8802
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 39,
      "value": "0x497"
    },
    "3315": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1443,
        1647
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3316": {
      "op": "JUMPDEST"
    },
    "3317": {
      "op": "DUP3"
    },
    "3318": {
      "op": "DUP1"
    },
    "3319": {
      "op": "SLOAD"
    },
    "3320": {
      "op": "DUP3"
    },
    "3321": {
      "op": "DUP3"
    },
    "3322": {
      "op": "SSTORE"
    },
    "3323": {
      "op": "SWAP1"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3326": {
      "op": "MSTORE"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3331": {
      "op": "KECCAK256"
    },
    "3332": {
      "op": "SWAP1"
    },
    "3333": {
      "op": "DUP2"
    },
    "3334": {
      "op": "ADD"
    },
    "3335": {
      "op": "SWAP3"
    },
    "3336": {
      "op": "DUP3"
    },
    "3337": {
      "op": "ISZERO"
    },
    "3338": {
      "op": "PUSH2",
      "value": "0xD49"
    },
    "3341": {
      "op": "JUMPI"
    },
    "3342": {
      "op": "SWAP2"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3345": {
      "op": "MUL"
    },
    "3346": {
      "op": "DUP3"
    },
    "3347": {
      "op": "ADD"
    },
    "3348": {
      "op": "JUMPDEST"
    },
    "3349": {
      "op": "DUP3"
    },
    "3350": {
      "op": "DUP2"
    },
    "3351": {
      "op": "GT"
    },
    "3352": {
      "op": "ISZERO"
    },
    "3353": {
      "op": "PUSH2",
      "value": "0xD49"
    },
    "3356": {
      "op": "JUMPI"
    },
    "3357": {
      "op": "DUP3"
    },
    "3358": {
      "op": "MLOAD"
    },
    "3359": {
      "op": "DUP3"
    },
    "3360": {
      "op": "SLOAD"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3367": {
      "op": "SHL"
    },
    "3368": {
      "op": "SUB"
    },
    "3369": {
      "op": "NOT"
    },
    "3370": {
      "op": "AND"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3377": {
      "op": "SHL"
    },
    "3378": {
      "op": "SUB"
    },
    "3379": {
      "op": "SWAP1"
    },
    "3380": {
      "op": "SWAP2"
    },
    "3381": {
      "op": "AND"
    },
    "3382": {
      "op": "OR"
    },
    "3383": {
      "op": "DUP3"
    },
    "3384": {
      "op": "SSTORE"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3387": {
      "op": "SWAP1"
    },
    "3388": {
      "op": "SWAP3"
    },
    "3389": {
      "op": "ADD"
    },
    "3390": {
      "op": "SWAP2"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3393": {
      "op": "SWAP1"
    },
    "3394": {
      "op": "SWAP2"
    },
    "3395": {
      "op": "ADD"
    },
    "3396": {
      "op": "SWAP1"
    },
    "3397": {
      "op": "PUSH2",
      "value": "0xD14"
    },
    "3400": {
      "op": "JUMP"
    },
    "3401": {
      "op": "JUMPDEST"
    },
    "3402": {
      "op": "POP"
    },
    "3403": {
      "op": "PUSH2",
      "value": "0xD55"
    },
    "3406": {
      "op": "SWAP3"
    },
    "3407": {
      "op": "SWAP2"
    },
    "3408": {
      "op": "POP"
    },
    "3409": {
      "op": "PUSH2",
      "value": "0xD59"
    },
    "3412": {
      "jump": "i",
      "op": "JUMP"
    },
    "3413": {
      "op": "JUMPDEST"
    },
    "3414": {
      "op": "POP"
    },
    "3415": {
      "op": "SWAP1"
    },
    "3416": {
      "jump": "o",
      "op": "JUMP"
    },
    "3417": {
      "op": "JUMPDEST"
    },
    "3418": {
      "op": "JUMPDEST"
    },
    "3419": {
      "op": "DUP1"
    },
    "3420": {
      "op": "DUP3"
    },
    "3421": {
      "op": "GT"
    },
    "3422": {
      "op": "ISZERO"
    },
    "3423": {
      "op": "PUSH2",
      "value": "0xD55"
    },
    "3426": {
      "op": "JUMPI"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3429": {
      "op": "DUP2"
    },
    "3430": {
      "op": "SSTORE"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3433": {
      "op": "ADD"
    },
    "3434": {
      "op": "PUSH2",
      "value": "0xD5A"
    },
    "3437": {
      "op": "JUMP"
    },
    "3438": {
      "op": "JUMPDEST"
    },
    "3439": {
      "op": "DUP1"
    },
    "3440": {
      "op": "ISZERO"
    },
    "3441": {
      "op": "ISZERO"
    },
    "3442": {
      "op": "DUP2"
    },
    "3443": {
      "op": "EQ"
    },
    "3444": {
      "op": "PUSH2",
      "value": "0x585"
    },
    "3447": {
      "op": "JUMPI"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3450": {
      "op": "DUP1"
    },
    "3451": {
      "op": "REVERT"
    },
    "3452": {
      "op": "JUMPDEST"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3455": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3457": {
      "op": "DUP3"
    },
    "3458": {
      "op": "DUP5"
    },
    "3459": {
      "op": "SUB"
    },
    "3460": {
      "op": "SLT"
    },
    "3461": {
      "op": "ISZERO"
    },
    "3462": {
      "op": "PUSH2",
      "value": "0xD8E"
    },
    "3465": {
      "op": "JUMPI"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3468": {
      "op": "DUP1"
    },
    "3469": {
      "op": "REVERT"
    },
    "3470": {
      "op": "JUMPDEST"
    },
    "3471": {
      "op": "DUP2"
    },
    "3472": {
      "op": "CALLDATALOAD"
    },
    "3473": {
      "op": "PUSH2",
      "value": "0xD99"
    },
    "3476": {
      "op": "DUP2"
    },
    "3477": {
      "op": "PUSH2",
      "value": "0xD6E"
    },
    "3480": {
      "jump": "i",
      "op": "JUMP"
    },
    "3481": {
      "op": "JUMPDEST"
    },
    "3482": {
      "op": "SWAP4"
    },
    "3483": {
      "op": "SWAP3"
    },
    "3484": {
      "op": "POP"
    },
    "3485": {
      "op": "POP"
    },
    "3486": {
      "op": "POP"
    },
    "3487": {
      "jump": "o",
      "op": "JUMP"
    },
    "3488": {
      "op": "JUMPDEST"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3491": {
      "op": "DUP1"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3494": {
      "op": "DUP4"
    },
    "3495": {
      "op": "DUP6"
    },
    "3496": {
      "op": "SUB"
    },
    "3497": {
      "op": "SLT"
    },
    "3498": {
      "op": "ISZERO"
    },
    "3499": {
      "op": "PUSH2",
      "value": "0xDB3"
    },
    "3502": {
      "op": "JUMPI"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3505": {
      "op": "DUP1"
    },
    "3506": {
      "op": "REVERT"
    },
    "3507": {
      "op": "JUMPDEST"
    },
    "3508": {
      "op": "DUP3"
    },
    "3509": {
      "op": "CALLDATALOAD"
    },
    "3510": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3519": {
      "op": "DUP1"
    },
    "3520": {
      "op": "DUP3"
    },
    "3521": {
      "op": "GT"
    },
    "3522": {
      "op": "ISZERO"
    },
    "3523": {
      "op": "PUSH2",
      "value": "0xDCB"
    },
    "3526": {
      "op": "JUMPI"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3529": {
      "op": "DUP1"
    },
    "3530": {
      "op": "REVERT"
    },
    "3531": {
      "op": "JUMPDEST"
    },
    "3532": {
      "op": "DUP2"
    },
    "3533": {
      "op": "DUP6"
    },
    "3534": {
      "op": "ADD"
    },
    "3535": {
      "op": "SWAP2"
    },
    "3536": {
      "op": "POP"
    },
    "3537": {
      "op": "DUP6"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3540": {
      "op": "DUP4"
    },
    "3541": {
      "op": "ADD"
    },
    "3542": {
      "op": "SLT"
    },
    "3543": {
      "op": "PUSH2",
      "value": "0xDDF"
    },
    "3546": {
      "op": "JUMPI"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3549": {
      "op": "DUP1"
    },
    "3550": {
      "op": "REVERT"
    },
    "3551": {
      "op": "JUMPDEST"
    },
    "3552": {
      "op": "DUP2"
    },
    "3553": {
      "op": "CALLDATALOAD"
    },
    "3554": {
      "op": "DUP2"
    },
    "3555": {
      "op": "DUP2"
    },
    "3556": {
      "op": "GT"
    },
    "3557": {
      "op": "ISZERO"
    },
    "3558": {
      "op": "PUSH2",
      "value": "0xDEE"
    },
    "3561": {
      "op": "JUMPI"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3564": {
      "op": "DUP1"
    },
    "3565": {
      "op": "REVERT"
    },
    "3566": {
      "op": "JUMPDEST"
    },
    "3567": {
      "op": "DUP7"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3570": {
      "op": "DUP3"
    },
    "3571": {
      "op": "DUP6"
    },
    "3572": {
      "op": "ADD"
    },
    "3573": {
      "op": "ADD"
    },
    "3574": {
      "op": "GT"
    },
    "3575": {
      "op": "ISZERO"
    },
    "3576": {
      "op": "PUSH2",
      "value": "0xE00"
    },
    "3579": {
      "op": "JUMPI"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3582": {
      "op": "DUP1"
    },
    "3583": {
      "op": "REVERT"
    },
    "3584": {
      "op": "JUMPDEST"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3587": {
      "op": "SWAP3"
    },
    "3588": {
      "op": "SWAP1"
    },
    "3589": {
      "op": "SWAP3"
    },
    "3590": {
      "op": "ADD"
    },
    "3591": {
      "op": "SWAP7"
    },
    "3592": {
      "op": "SWAP2"
    },
    "3593": {
      "op": "SWAP6"
    },
    "3594": {
      "op": "POP"
    },
    "3595": {
      "op": "SWAP1"
    },
    "3596": {
      "op": "SWAP4"
    },
    "3597": {
      "op": "POP"
    },
    "3598": {
      "op": "POP"
    },
    "3599": {
      "op": "POP"
    },
    "3600": {
      "op": "POP"
    },
    "3601": {
      "jump": "o",
      "op": "JUMP"
    },
    "3602": {
      "op": "JUMPDEST"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3605": {
      "op": "DUP2"
    },
    "3606": {
      "op": "MLOAD"
    },
    "3607": {
      "op": "DUP1"
    },
    "3608": {
      "op": "DUP5"
    },
    "3609": {
      "op": "MSTORE"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3612": {
      "op": "JUMPDEST"
    },
    "3613": {
      "op": "DUP2"
    },
    "3614": {
      "op": "DUP2"
    },
    "3615": {
      "op": "LT"
    },
    "3616": {
      "op": "ISZERO"
    },
    "3617": {
      "op": "PUSH2",
      "value": "0xE38"
    },
    "3620": {
      "op": "JUMPI"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3623": {
      "op": "DUP2"
    },
    "3624": {
      "op": "DUP6"
    },
    "3625": {
      "op": "ADD"
    },
    "3626": {
      "op": "DUP2"
    },
    "3627": {
      "op": "ADD"
    },
    "3628": {
      "op": "MLOAD"
    },
    "3629": {
      "op": "DUP7"
    },
    "3630": {
      "op": "DUP4"
    },
    "3631": {
      "op": "ADD"
    },
    "3632": {
      "op": "DUP3"
    },
    "3633": {
      "op": "ADD"
    },
    "3634": {
      "op": "MSTORE"
    },
    "3635": {
      "op": "ADD"
    },
    "3636": {
      "op": "PUSH2",
      "value": "0xE1C"
    },
    "3639": {
      "op": "JUMP"
    },
    "3640": {
      "op": "JUMPDEST"
    },
    "3641": {
      "op": "DUP2"
    },
    "3642": {
      "op": "DUP2"
    },
    "3643": {
      "op": "GT"
    },
    "3644": {
      "op": "ISZERO"
    },
    "3645": {
      "op": "PUSH2",
      "value": "0xE4A"
    },
    "3648": {
      "op": "JUMPI"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3653": {
      "op": "DUP4"
    },
    "3654": {
      "op": "DUP8"
    },
    "3655": {
      "op": "ADD"
    },
    "3656": {
      "op": "ADD"
    },
    "3657": {
      "op": "MSTORE"
    },
    "3658": {
      "op": "JUMPDEST"
    },
    "3659": {
      "op": "POP"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3662": {
      "op": "ADD"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3665": {
      "op": "NOT"
    },
    "3666": {
      "op": "AND"
    },
    "3667": {
      "op": "SWAP3"
    },
    "3668": {
      "op": "SWAP1"
    },
    "3669": {
      "op": "SWAP3"
    },
    "3670": {
      "op": "ADD"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3673": {
      "op": "ADD"
    },
    "3674": {
      "op": "SWAP3"
    },
    "3675": {
      "op": "SWAP2"
    },
    "3676": {
      "op": "POP"
    },
    "3677": {
      "op": "POP"
    },
    "3678": {
      "jump": "o",
      "op": "JUMP"
    },
    "3679": {
      "op": "JUMPDEST"
    },
    "3680": {
      "op": "DUP3"
    },
    "3681": {
      "op": "ISZERO"
    },
    "3682": {
      "op": "ISZERO"
    },
    "3683": {
      "op": "DUP2"
    },
    "3684": {
      "op": "MSTORE"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3689": {
      "op": "DUP3"
    },
    "3690": {
      "op": "ADD"
    },
    "3691": {
      "op": "MSTORE"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3694": {
      "op": "PUSH2",
      "value": "0x497"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3699": {
      "op": "DUP4"
    },
    "3700": {
      "op": "ADD"
    },
    "3701": {
      "op": "DUP5"
    },
    "3702": {
      "op": "PUSH2",
      "value": "0xE12"
    },
    "3705": {
      "jump": "i",
      "op": "JUMP"
    },
    "3706": {
      "op": "JUMPDEST"
    },
    "3707": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3714": {
      "op": "SHL"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3717": {
      "op": "MSTORE"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3722": {
      "op": "MSTORE"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3727": {
      "op": "REVERT"
    },
    "3728": {
      "op": "JUMPDEST"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3731": {
      "op": "DUP2"
    },
    "3732": {
      "op": "ADD"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3735": {
      "op": "DUP4"
    },
    "3736": {
      "op": "LT"
    },
    "3737": {
      "op": "PUSH2",
      "value": "0xEB2"
    },
    "3740": {
      "op": "JUMPI"
    },
    "3741": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3748": {
      "op": "SHL"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3751": {
      "op": "MSTORE"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3756": {
      "op": "MSTORE"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3761": {
      "op": "REVERT"
    },
    "3762": {
      "op": "JUMPDEST"
    },
    "3763": {
      "op": "SWAP2"
    },
    "3764": {
      "op": "SWAP1"
    },
    "3765": {
      "op": "MSTORE"
    },
    "3766": {
      "op": "SWAP1"
    },
    "3767": {
      "jump": "o",
      "op": "JUMP"
    },
    "3768": {
      "op": "JUMPDEST"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3771": {
      "op": "DUP1"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3774": {
      "op": "DUP4"
    },
    "3775": {
      "op": "DUP6"
    },
    "3776": {
      "op": "SUB"
    },
    "3777": {
      "op": "SLT"
    },
    "3778": {
      "op": "ISZERO"
    },
    "3779": {
      "op": "PUSH2",
      "value": "0xECB"
    },
    "3782": {
      "op": "JUMPI"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3785": {
      "op": "DUP1"
    },
    "3786": {
      "op": "REVERT"
    },
    "3787": {
      "op": "JUMPDEST"
    },
    "3788": {
      "op": "POP"
    },
    "3789": {
      "op": "POP"
    },
    "3790": {
      "op": "DUP1"
    },
    "3791": {
      "op": "CALLDATALOAD"
    },
    "3792": {
      "op": "SWAP3"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3795": {
      "op": "SWAP1"
    },
    "3796": {
      "op": "SWAP2"
    },
    "3797": {
      "op": "ADD"
    },
    "3798": {
      "op": "CALLDATALOAD"
    },
    "3799": {
      "op": "SWAP2"
    },
    "3800": {
      "op": "POP"
    },
    "3801": {
      "jump": "o",
      "op": "JUMP"
    },
    "3802": {
      "op": "JUMPDEST"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3807": {
      "op": "DUP3"
    },
    "3808": {
      "op": "DUP5"
    },
    "3809": {
      "op": "SUB"
    },
    "3810": {
      "op": "SLT"
    },
    "3811": {
      "op": "ISZERO"
    },
    "3812": {
      "op": "PUSH2",
      "value": "0xEEC"
    },
    "3815": {
      "op": "JUMPI"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3818": {
      "op": "DUP1"
    },
    "3819": {
      "op": "REVERT"
    },
    "3820": {
      "op": "JUMPDEST"
    },
    "3821": {
      "op": "DUP2"
    },
    "3822": {
      "op": "CALLDATALOAD"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3829": {
      "op": "SHL"
    },
    "3830": {
      "op": "SUB"
    },
    "3831": {
      "op": "DUP2"
    },
    "3832": {
      "op": "AND"
    },
    "3833": {
      "op": "DUP2"
    },
    "3834": {
      "op": "EQ"
    },
    "3835": {
      "op": "PUSH2",
      "value": "0xD99"
    },
    "3838": {
      "op": "JUMPI"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3841": {
      "op": "DUP1"
    },
    "3842": {
      "op": "REVERT"
    },
    "3843": {
      "op": "JUMPDEST"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3848": {
      "op": "DUP3"
    },
    "3849": {
      "op": "DUP5"
    },
    "3850": {
      "op": "SUB"
    },
    "3851": {
      "op": "SLT"
    },
    "3852": {
      "op": "ISZERO"
    },
    "3853": {
      "op": "PUSH2",
      "value": "0xF15"
    },
    "3856": {
      "op": "JUMPI"
    },
    "3857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3859": {
      "op": "DUP1"
    },
    "3860": {
      "op": "REVERT"
    },
    "3861": {
      "op": "JUMPDEST"
    },
    "3862": {
      "op": "POP"
    },
    "3863": {
      "op": "CALLDATALOAD"
    },
    "3864": {
      "op": "SWAP2"
    },
    "3865": {
      "op": "SWAP1"
    },
    "3866": {
      "op": "POP"
    },
    "3867": {
      "jump": "o",
      "op": "JUMP"
    },
    "3868": {
      "op": "JUMPDEST"
    },
    "3869": {
      "op": "DUP1"
    },
    "3870": {
      "op": "MLOAD"
    },
    "3871": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "3882": {
      "op": "DUP2"
    },
    "3883": {
      "op": "AND"
    },
    "3884": {
      "op": "DUP2"
    },
    "3885": {
      "op": "EQ"
    },
    "3886": {
      "op": "PUSH2",
      "value": "0xF36"
    },
    "3889": {
      "op": "JUMPI"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3892": {
      "op": "DUP1"
    },
    "3893": {
      "op": "REVERT"
    },
    "3894": {
      "op": "JUMPDEST"
    },
    "3895": {
      "op": "SWAP2"
    },
    "3896": {
      "op": "SWAP1"
    },
    "3897": {
      "op": "POP"
    },
    "3898": {
      "jump": "o",
      "op": "JUMP"
    },
    "3899": {
      "op": "JUMPDEST"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3902": {
      "op": "DUP1"
    },
    "3903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3905": {
      "op": "DUP1"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3910": {
      "op": "DUP7"
    },
    "3911": {
      "op": "DUP9"
    },
    "3912": {
      "op": "SUB"
    },
    "3913": {
      "op": "SLT"
    },
    "3914": {
      "op": "ISZERO"
    },
    "3915": {
      "op": "PUSH2",
      "value": "0xF53"
    },
    "3918": {
      "op": "JUMPI"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3921": {
      "op": "DUP1"
    },
    "3922": {
      "op": "REVERT"
    },
    "3923": {
      "op": "JUMPDEST"
    },
    "3924": {
      "op": "PUSH2",
      "value": "0xF5C"
    },
    "3927": {
      "op": "DUP7"
    },
    "3928": {
      "op": "PUSH2",
      "value": "0xF1C"
    },
    "3931": {
      "jump": "i",
      "op": "JUMP"
    },
    "3932": {
      "op": "JUMPDEST"
    },
    "3933": {
      "op": "SWAP5"
    },
    "3934": {
      "op": "POP"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3937": {
      "op": "DUP7"
    },
    "3938": {
      "op": "ADD"
    },
    "3939": {
      "op": "MLOAD"
    },
    "3940": {
      "op": "SWAP4"
    },
    "3941": {
      "op": "POP"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3944": {
      "op": "DUP7"
    },
    "3945": {
      "op": "ADD"
    },
    "3946": {
      "op": "MLOAD"
    },
    "3947": {
      "op": "SWAP3"
    },
    "3948": {
      "op": "POP"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3951": {
      "op": "DUP7"
    },
    "3952": {
      "op": "ADD"
    },
    "3953": {
      "op": "MLOAD"
    },
    "3954": {
      "op": "SWAP2"
    },
    "3955": {
      "op": "POP"
    },
    "3956": {
      "op": "PUSH2",
      "value": "0xF7F"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3961": {
      "op": "DUP8"
    },
    "3962": {
      "op": "ADD"
    },
    "3963": {
      "op": "PUSH2",
      "value": "0xF1C"
    },
    "3966": {
      "jump": "i",
      "op": "JUMP"
    },
    "3967": {
      "op": "JUMPDEST"
    },
    "3968": {
      "op": "SWAP1"
    },
    "3969": {
      "op": "POP"
    },
    "3970": {
      "op": "SWAP3"
    },
    "3971": {
      "op": "SWAP6"
    },
    "3972": {
      "op": "POP"
    },
    "3973": {
      "op": "SWAP3"
    },
    "3974": {
      "op": "SWAP6"
    },
    "3975": {
      "op": "SWAP1"
    },
    "3976": {
      "op": "SWAP4"
    },
    "3977": {
      "op": "POP"
    },
    "3978": {
      "jump": "o",
      "op": "JUMP"
    },
    "3979": {
      "op": "JUMPDEST"
    },
    "3980": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3987": {
      "op": "SHL"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3990": {
      "op": "MSTORE"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3995": {
      "op": "MSTORE"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4000": {
      "op": "REVERT"
    },
    "4001": {
      "op": "JUMPDEST"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4004": {
      "op": "DUP2"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4007": {
      "op": "NOT"
    },
    "4008": {
      "op": "DIV"
    },
    "4009": {
      "op": "DUP4"
    },
    "4010": {
      "op": "GT"
    },
    "4011": {
      "op": "DUP3"
    },
    "4012": {
      "op": "ISZERO"
    },
    "4013": {
      "op": "ISZERO"
    },
    "4014": {
      "op": "AND"
    },
    "4015": {
      "op": "ISZERO"
    },
    "4016": {
      "op": "PUSH2",
      "value": "0xFBB"
    },
    "4019": {
      "op": "JUMPI"
    },
    "4020": {
      "op": "PUSH2",
      "value": "0xFBB"
    },
    "4023": {
      "op": "PUSH2",
      "value": "0xF8B"
    },
    "4026": {
      "jump": "i",
      "op": "JUMP"
    },
    "4027": {
      "op": "JUMPDEST"
    },
    "4028": {
      "op": "POP"
    },
    "4029": {
      "op": "MUL"
    },
    "4030": {
      "op": "SWAP1"
    },
    "4031": {
      "jump": "o",
      "op": "JUMP"
    },
    "4032": {
      "op": "JUMPDEST"
    },
    "4033": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4040": {
      "op": "SHL"
    },
    "4041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4043": {
      "op": "MSTORE"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4048": {
      "op": "MSTORE"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4053": {
      "op": "REVERT"
    },
    "4054": {
      "op": "JUMPDEST"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4057": {
      "op": "DUP3"
    },
    "4058": {
      "op": "PUSH2",
      "value": "0xFE5"
    },
    "4061": {
      "op": "JUMPI"
    },
    "4062": {
      "op": "PUSH2",
      "value": "0xFE5"
    },
    "4065": {
      "op": "PUSH2",
      "value": "0xFC0"
    },
    "4068": {
      "jump": "i",
      "op": "JUMP"
    },
    "4069": {
      "op": "JUMPDEST"
    },
    "4070": {
      "op": "POP"
    },
    "4071": {
      "op": "DIV"
    },
    "4072": {
      "op": "SWAP1"
    },
    "4073": {
      "jump": "o",
      "op": "JUMP"
    },
    "4074": {
      "op": "JUMPDEST"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4077": {
      "op": "DUP1"
    },
    "4078": {
      "op": "DUP3"
    },
    "4079": {
      "op": "MSTORE"
    },
    "4080": {
      "op": "DUP2"
    },
    "4081": {
      "op": "DUP2"
    },
    "4082": {
      "op": "ADD"
    },
    "4083": {
      "op": "MSTORE"
    },
    "4084": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4119": {
      "op": "DUP3"
    },
    "4120": {
      "op": "ADD"
    },
    "4121": {
      "op": "MSTORE"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4124": {
      "op": "ADD"
    },
    "4125": {
      "op": "SWAP1"
    },
    "4126": {
      "jump": "o",
      "op": "JUMP"
    },
    "4127": {
      "op": "JUMPDEST"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4130": {
      "op": "DUP3"
    },
    "4131": {
      "op": "DUP3"
    },
    "4132": {
      "op": "LT"
    },
    "4133": {
      "op": "ISZERO"
    },
    "4134": {
      "op": "PUSH2",
      "value": "0x1031"
    },
    "4137": {
      "op": "JUMPI"
    },
    "4138": {
      "op": "PUSH2",
      "value": "0x1031"
    },
    "4141": {
      "op": "PUSH2",
      "value": "0xF8B"
    },
    "4144": {
      "jump": "i",
      "op": "JUMP"
    },
    "4145": {
      "op": "JUMPDEST"
    },
    "4146": {
      "op": "POP"
    },
    "4147": {
      "op": "SUB"
    },
    "4148": {
      "op": "SWAP1"
    },
    "4149": {
      "jump": "o",
      "op": "JUMP"
    },
    "4150": {
      "op": "JUMPDEST"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4153": {
      "op": "DUP3"
    },
    "4154": {
      "op": "PUSH2",
      "value": "0x1045"
    },
    "4157": {
      "op": "JUMPI"
    },
    "4158": {
      "op": "PUSH2",
      "value": "0x1045"
    },
    "4161": {
      "op": "PUSH2",
      "value": "0xFC0"
    },
    "4164": {
      "jump": "i",
      "op": "JUMP"
    },
    "4165": {
      "op": "JUMPDEST"
    },
    "4166": {
      "op": "POP"
    },
    "4167": {
      "op": "MOD"
    },
    "4168": {
      "op": "SWAP1"
    },
    "4169": {
      "jump": "o",
      "op": "JUMP"
    },
    "4170": {
      "op": "JUMPDEST"
    },
    "4171": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4178": {
      "op": "SHL"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4181": {
      "op": "MSTORE"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4186": {
      "op": "MSTORE"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4191": {
      "op": "REVERT"
    },
    "4192": {
      "op": "JUMPDEST"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4195": {
      "op": "DUP3"
    },
    "4196": {
      "op": "NOT"
    },
    "4197": {
      "op": "DUP3"
    },
    "4198": {
      "op": "GT"
    },
    "4199": {
      "op": "ISZERO"
    },
    "4200": {
      "op": "PUSH2",
      "value": "0x1073"
    },
    "4203": {
      "op": "JUMPI"
    },
    "4204": {
      "op": "PUSH2",
      "value": "0x1073"
    },
    "4207": {
      "op": "PUSH2",
      "value": "0xF8B"
    },
    "4210": {
      "jump": "i",
      "op": "JUMP"
    },
    "4211": {
      "op": "JUMPDEST"
    },
    "4212": {
      "op": "POP"
    },
    "4213": {
      "op": "ADD"
    },
    "4214": {
      "op": "SWAP1"
    },
    "4215": {
      "jump": "o",
      "op": "JUMP"
    },
    "4216": {
      "op": "JUMPDEST"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4219": {
      "op": "DUP1"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4222": {
      "op": "SHL"
    },
    "4223": {
      "op": "SUB"
    },
    "4224": {
      "op": "DUP5"
    },
    "4225": {
      "op": "AND"
    },
    "4226": {
      "op": "DUP2"
    },
    "4227": {
      "op": "MSTORE"
    },
    "4228": {
      "op": "DUP3"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4231": {
      "op": "DUP3"
    },
    "4232": {
      "op": "ADD"
    },
    "4233": {
      "op": "MSTORE"
    },
    "4234": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4238": {
      "op": "DUP3"
    },
    "4239": {
      "op": "ADD"
    },
    "4240": {
      "op": "MSTORE"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4243": {
      "op": "PUSH2",
      "value": "0x109F"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4248": {
      "op": "DUP4"
    },
    "4249": {
      "op": "ADD"
    },
    "4250": {
      "op": "DUP5"
    },
    "4251": {
      "op": "PUSH2",
      "value": "0xE12"
    },
    "4254": {
      "jump": "i",
      "op": "JUMP"
    },
    "4255": {
      "op": "JUMPDEST"
    },
    "4256": {
      "op": "SWAP6"
    },
    "4257": {
      "op": "SWAP5"
    },
    "4258": {
      "op": "POP"
    },
    "4259": {
      "op": "POP"
    },
    "4260": {
      "op": "POP"
    },
    "4261": {
      "op": "POP"
    },
    "4262": {
      "op": "POP"
    },
    "4263": {
      "jump": "o",
      "op": "JUMP"
    },
    "4264": {
      "op": "JUMPDEST"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4269": {
      "op": "DUP3"
    },
    "4270": {
      "op": "DUP5"
    },
    "4271": {
      "op": "SUB"
    },
    "4272": {
      "op": "SLT"
    },
    "4273": {
      "op": "ISZERO"
    },
    "4274": {
      "op": "PUSH2",
      "value": "0x10BA"
    },
    "4277": {
      "op": "JUMPI"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4280": {
      "op": "DUP1"
    },
    "4281": {
      "op": "REVERT"
    },
    "4282": {
      "op": "JUMPDEST"
    },
    "4283": {
      "op": "DUP2"
    },
    "4284": {
      "op": "MLOAD"
    },
    "4285": {
      "op": "PUSH2",
      "value": "0xD99"
    },
    "4288": {
      "op": "DUP2"
    },
    "4289": {
      "op": "PUSH2",
      "value": "0xD6E"
    },
    "4292": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "0e07983cebb6c89a9483a16f5088145799afd15d",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\";\n\ncontract ArtemLottery is VRFConsumerBase, Ownable, KeeperCompatibleInterface {\n    address payable[] public players;\n    address payable public recentWinner;\n    uint256 public randomness;\n    uint256 public usdEntryFee;\n    AggregatorV3Interface internal ethUsdPriceFeed;\n    enum LOTTERY_STATE {\n        OPEN,\n        CLOSED,\n        CALCULATING_WINNER\n    }\n    LOTTERY_STATE public lottery_state;\n    uint256 public fee;\n    bytes32 public keyhash;\n    event RequestedRandomness(bytes32 requestId);\n\n    event LotteryEnded(\n        bytes32 indexed requestId,\n        address recentWinner,\n        uint256 randomNumber\n    );\n\n    // 0\n    // 1\n    // 2\n    /**\n     * Use an interval in seconds and a timestamp to slow execution of Upkeep\n     */\n    uint256 public immutable lotteryDurationInSeconds;\n    uint256 public lastTimeStamp;\n    uint256 public lotteryCounter;\n    bool public shouldRestart;\n\n    constructor(\n        address _priceFeedAddress,\n        address _vrfCoordinator,\n        address _link,\n        uint256 _fee,\n        bytes32 _keyhash,\n        uint256 _usdEntryFee,\n        uint256 duration\n    ) public VRFConsumerBase(_vrfCoordinator, _link) {\n        usdEntryFee = _usdEntryFee;\n        ethUsdPriceFeed = AggregatorV3Interface(_priceFeedAddress);\n        lottery_state = LOTTERY_STATE.CLOSED;\n        fee = _fee;\n        keyhash = _keyhash;\n        lotteryDurationInSeconds = duration;\n        lastTimeStamp = block.timestamp;\n        lotteryCounter = 0;\n        shouldRestart = false;\n    }\n\n    function enter() public payable {\n        // $10 minimum\n        require(lottery_state == LOTTERY_STATE.OPEN);\n        require(msg.value >= getEntranceFee(), \"Not enough ETH!\");\n        players.push(payable(msg.sender));\n    }\n\n    function getEntranceFee() public view returns (uint256) {\n        (, int256 price, , , ) = ethUsdPriceFeed.latestRoundData();\n        uint256 adjustedPrice = uint256(price) * 10**10; // 18 decimals\n        // $50, $2,000 / ETH\n        // 50/2,000\n        // 50 * 100000 / 2000\n        uint256 costToEnter = (usdEntryFee * 10**18) / adjustedPrice;\n        return costToEnter;\n    }\n\n    /**\n     * Returns the latest price\n     */\n    function getLatestPrice() public view returns (int256) {\n        (\n            uint80 roundID,\n            int256 price,\n            uint256 startedAt,\n            uint256 timeStamp,\n            uint80 answeredInRound\n        ) = ethUsdPriceFeed.latestRoundData();\n        return price;\n    }\n\n    function startLottery() public onlyOwner {\n        require(\n            lottery_state == LOTTERY_STATE.CLOSED,\n            \"Can't start a new lottery yet!\"\n        );\n        lottery_state = LOTTERY_STATE.OPEN;\n        lastTimeStamp = block.timestamp;\n    }\n\n    function endLottery(bool _shouldRestart) public onlyOwner {\n        endLotteryInternal(_shouldRestart);\n    }\n\n    function endLotteryInternal(bool _shouldRestart) internal {\n        lottery_state = LOTTERY_STATE.CALCULATING_WINNER;\n        bytes32 requestId = 0;\n        if (players.length > 1) {\n            requestId = requestRandomness(keyhash, fee);\n        }\n        emit RequestedRandomness(requestId);\n        shouldRestart = _shouldRestart;\n        if (players.length <= 1) {\n            fulfillRandomness(requestId, 1);\n        }\n    }\n\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness)\n        internal\n        override\n    {\n        require(\n            lottery_state == LOTTERY_STATE.CALCULATING_WINNER,\n            \"You aren't there yet!\"\n        );\n        require(_randomness > 0, \"random not found\");\n        uint256 indexOfWinner = _randomness % players.length;\n        recentWinner = players[indexOfWinner];\n        emit LotteryEnded(_requestId, recentWinner, randomness);\n        recentWinner.transfer(address(this).balance);\n        // Reset\n        players = new address payable[](0);\n        lottery_state = LOTTERY_STATE.CLOSED;\n        lotteryCounter = lotteryCounter + 1;\n        randomness = _randomness;\n        if (shouldRestart) {\n            shouldRestart = false;\n            startLottery();\n        }\n    }\n\n    function checkUpkeep(bytes calldata checkData)\n        external\n        override\n        returns (bool upkeepNeeded, bytes memory performData)\n    {\n        upkeepNeeded =\n            (block.timestamp - lastTimeStamp) > lotteryDurationInSeconds &&\n            lottery_state == LOTTERY_STATE.OPEN &&\n            players.length > 0;\n    }\n\n    function performUpkeep(bytes calldata performData) external override {\n        lastTimeStamp = block.timestamp;\n        endLotteryInternal(false);\n    }\n}\n",
  "sourceMap": "329:4617:7:-:0;;;1240:610;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9369:32:2;;;;;9407;;;;867:23:0;666:10:1;867:9:0;:23::i;:::-;1510:11:7::1;:26:::0;;;;1546:15:::1;:58:::0;;-1:-1:-1;;;;;1546:58:7;;;::::1;-1:-1:-1::0;;;;;;1614:36:7;;;;;;;-1:-1:-1;;;1614:36:7::1;::::0;;;1660:3:::1;:10:::0;;;;1680:7:::1;:18:::0;-1:-1:-1;;1708:35:7::1;::::0;1769:15:::1;1753:13;:31:::0;-1:-1:-1;1794:14:7::1;:18:::0;1822:13:::1;:21:::0;;-1:-1:-1;;1822:21:7::1;::::0;;329:4617;;2041:169:0;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;14:177:8:-;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:626::-;320:6;328;336;344;352;360;368;421:3;409:9;400:7;396:23;392:33;389:53;;;438:1;435;428:12;389:53;461:40;491:9;461:40;:::i;:::-;451:50;;520:49;565:2;554:9;550:18;520:49;:::i;:::-;510:59;;588:49;633:2;622:9;618:18;588:49;:::i;:::-;578:59;;677:2;666:9;662:18;656:25;646:35;;721:3;710:9;706:19;700:26;690:36;;766:3;755:9;751:19;745:26;735:36;;811:3;800:9;796:19;790:26;780:36;;196:626;;;;;;;;;;:::o;827:127::-;329:4617:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/ArtemLottery.sol",
  "type": "contract"
}